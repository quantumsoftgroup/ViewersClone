{"version":3,"sources":["webpack://[name]/webpack/universalModuleDefinition","webpack://[name]/webpack/bootstrap","webpack://[name]/./externalModules.js","webpack://[name]/./imageLoader/colorSpaceConverters/convertPALETTECOLOR.js","webpack://[name]/./imageLoader/colorSpaceConverters/convertRGBColorByPixel.js","webpack://[name]/./imageLoader/colorSpaceConverters/convertRGBColorByPlane.js","webpack://[name]/./imageLoader/colorSpaceConverters/convertYBRFullByPixel.js","webpack://[name]/./imageLoader/colorSpaceConverters/convertYBRFullByPlane.js","webpack://[name]/./imageLoader/colorSpaceConverters/index.js","webpack://[name]/./imageLoader/configure.js","webpack://[name]/./imageLoader/convertColorSpace.js","webpack://[name]/./imageLoader/createImage.js","webpack://[name]/./imageLoader/decodeImageFrame.js","webpack://[name]/./imageLoader/decodeJPEGBaseline8BitColor.js","webpack://[name]/./imageLoader/getImageFrame.js","webpack://[name]/./imageLoader/index.js","webpack://[name]/./imageLoader/internal/index.js","webpack://[name]/./imageLoader/internal/options.js","webpack://[name]/./imageLoader/internal/xhrRequest.js","webpack://[name]/./imageLoader/isColorImage.js","webpack://[name]/./imageLoader/isJPEGBaseline8BitColor.js","webpack://[name]/./imageLoader/registerLoaders.js","webpack://[name]/./imageLoader/wadors/findIndexOfString.js","webpack://[name]/./imageLoader/wadors/getPixelData.js","webpack://[name]/./imageLoader/wadors/index.js","webpack://[name]/./imageLoader/wadors/loadImage.js","webpack://[name]/./imageLoader/wadors/metaData/getNumberString.js","webpack://[name]/./imageLoader/wadors/metaData/getNumberValue.js","webpack://[name]/./imageLoader/wadors/metaData/getNumberValues.js","webpack://[name]/./imageLoader/wadors/metaData/getValue.js","webpack://[name]/./imageLoader/wadors/metaData/index.js","webpack://[name]/./imageLoader/wadors/metaData/metaDataProvider.js","webpack://[name]/./imageLoader/wadors/metaDataManager.js","webpack://[name]/./imageLoader/wadors/register.js","webpack://[name]/./imageLoader/wadouri/dataSetCacheManager.js","webpack://[name]/./imageLoader/wadouri/fileManager.js","webpack://[name]/./imageLoader/wadouri/getEncapsulatedImageFrame.js","webpack://[name]/./imageLoader/wadouri/getPixelData.js","webpack://[name]/./imageLoader/wadouri/getUncompressedImageFrame.js","webpack://[name]/./imageLoader/wadouri/index.js","webpack://[name]/./imageLoader/wadouri/loadFileRequest.js","webpack://[name]/./imageLoader/wadouri/loadImage.js","webpack://[name]/./imageLoader/wadouri/metaData/getImagePixelModule.js","webpack://[name]/./imageLoader/wadouri/metaData/getLUTs.js","webpack://[name]/./imageLoader/wadouri/metaData/getModalityLUTOutputPixelRepresentation.js","webpack://[name]/./imageLoader/wadouri/metaData/getNumberValues.js","webpack://[name]/./imageLoader/wadouri/metaData/index.js","webpack://[name]/./imageLoader/wadouri/metaData/metaDataProvider.js","webpack://[name]/./imageLoader/wadouri/parseImageId.js","webpack://[name]/./imageLoader/wadouri/register.js","webpack://[name]/./imageLoader/wadouri/unpackBinaryFrame.js","webpack://[name]/./imageLoader/webWorkerManager.js","webpack://[name]/./shared/calculateMinMax.js","webpack://[name]/./shared/decodeImageFrame.js","webpack://[name]/./shared/decoders/decodeBigEndian.js","webpack://[name]/./shared/decoders/decodeJPEG2000.js","webpack://[name]/./shared/decoders/decodeJPEGBaseline.js","webpack://[name]/./shared/decoders/decodeJPEGLS.js","webpack://[name]/./shared/decoders/decodeJPEGLossless.js","webpack://[name]/./shared/decoders/decodeLittleEndian.js","webpack://[name]/./shared/decoders/decodeRLE.js","webpack://[name]/./shared/getMinMax.js","webpack://[name]/./version.js"],"names":["cornerstone","dicomParser","external","cs","window","Error","dp","imageFrame","rgbaBuffer","numPixels","columns","rows","pixelData","rData","redPaletteColorLookupTableData","gData","greenPaletteColorLookupTableData","bData","bluePaletteColorLookupTableData","len","length","palIndex","rgbaIndex","start","redPaletteColorLookupTableDescriptor","shift","rDataCleaned","convertLUTto8Bit","gDataCleaned","bDataCleaned","i","value","lut","numEntries","cleanedLUT","Uint8ClampedArray","undefined","rgbIndex","rIndex","gIndex","bIndex","ybrIndex","y","cb","cr","yIndex","cbIndex","crIndex","default","configure","options","convertColorSpace","convertRGB","planarConfiguration","convertYBRFull","imageData","data","photometricInterpretation","lastImageIdDrawn","isModalityLUTForDisplay","sopClassUid","convertToIntPixelData","floatPixelData","floatMinMax","floatRange","Math","abs","max","min","intRange","slope","intercept","intPixelData","Uint16Array","rescaledPixel","floor","setPixelDataType","bitsAllocated","Float32Array","pixelRepresentation","Int16Array","Uint8Array","createImage","imageId","transferSyntax","Promise","reject","canvas","document","createElement","decodePromise","resolve","then","imagePlaneModule","metaData","get","voiLutModule","modalityLutModule","sopCommonModule","isColorImage","height","width","context","getContext","createImageData","minMax","smallestPixelValue","largestPixelValue","image","color","columnPixelSpacing","pixelSpacing","rescaleIntercept","invert","minPixelValue","maxPixelValue","rowPixelSpacing","sizeInBytes","rescaleSlope","windowCenter","windowWidth","decodeTimeInMS","results","getPixelData","getCanvas","putImageData","modalityLUTSequence","sopClassUID","modalityLUT","voiLUTSequence","voiLUT","maxVoi","minVoi","codecsInitialized","processDecodeTask","priority","transferList","transferPixelData","buffer","loaderOptions","strict","decodeConfig","useWebWorkers","decodeArguments","decodedImageFrame","decodeImageFrameHandler","error","webWorkerManager","addTask","promise","decodeImageFrame","samplesPerPixel","arrayBufferToString","binaryToString","String","fromCharCode","apply","Array","prototype","slice","binary","decodeURIComponent","escape","_error","URIError","decodeJPEGBaseline8BitColor","Date","getTime","imgBlob","Blob","type","fileReader","FileReader","readAsBinaryString","readAsArrayBuffer","onload","img","Image","drawImage","getImageData","end","onerror","src","btoa","result","e","getImageFrame","imagePixelModule","bitsStored","greenPaletteColorLookupTableDescriptor","bluePaletteColorLookupTableDescriptor","internal","xhrRequest","setOptions","getOptions","beforeSend","imageCreated","usePDFJS","newOptions","Object","assign","url","headers","params","xhr","XMLHttpRequest","open","responseType","keys","forEach","key","deferred","onloadstart","event","eventData","triggerEvent","events","onloadend","onreadystatechange","readyState","status","response","onprogress","oProgress","loaded","total","percentComplete","lengthComputable","round","send","photoMetricInterpretation","isJPEGBaseline8BitColor","registerLoaders","wadors","register","wadouri","checkToken","token","dataOffset","endIndex","stringToUint8Array","str","uint","j","charCodeAt","findIndexOfString","offset","findBoundary","header","substr","findContentType","trim","uint8ArrayToString","uri","mediaType","accept","loadPromise","imageFrameAsArrayBuffer","tokenIndex","split","boundary","contentType","getNumberString","getNumberValue","getNumberValues","getValue","metaDataProvider","loadImage","metaDataManager","getTransferSyntaxForContentType","parameters","parameterValues","parameter","substring","imagePromise","loadTimeInMS","cancelFn","element","index","defaultValue","parseFloat","minimumLength","Value","values","push","modality","seriesInstanceUID","seriesNumber","studyInstanceUID","seriesDate","parseDA","seriesTime","parseTM","patientAge","patientSize","patientWeight","imageOrientationPatient","imagePositionPatient","rowCosines","columnCosines","frameOfReferenceUID","sliceThickness","sliceLocation","highBit","pixelAspectRatio","rescaleType","sopInstanceUID","radiopharmaceuticalInfo","radiopharmaceuticalStartTime","radionuclideTotalDose","radionuclideHalfLife","imageIds","add","metadata","remove","purge","registerImageLoader","addProvider","getInfo","cacheSizeInBytes","loadedDataSets","promises","isLoaded","dataSet","load","loadRequest","cacheCount","loadDICOMPromise","dicomPart10AsArrayBuffer","byteArray","parseDicom","action","cacheInfo","unload","numberOfDataSetsCached","files","file","fileIndex","getEncapsulatedImageFrame","framesAreFragmented","numberOfFrames","intString","pixelDataElement","elements","x7fe00010","fragments","frameIndex","basicOffsetTable","readEncapsulatedImageFrame","createJPEGBasicOffsetTable","readEncapsulatedPixelDataFromFragments","x7fe00008","encapsulatedPixelData","getUncompressedImageFrame","uint16","pixelDataOffset","pixelsPerFrame","frameOffset","getImagePixelModule","getLUTs","getModalityLUTOutputPixelRepresentation","dataSetCacheManager","fileManager","loadFileRequest","loadImageFromPromise","getLoaderForScheme","parseImageId","unpackBinaryFrame","parsedImageId","parseInt","target","addDecache","imageLoadObject","decache","dataSetPromise","frame","sharedCacheKey","callbacks","string","loadEnd","totalTimeInMS","imageDoneCallback","loadImageFromDataSet","scheme","loader","getLutDescriptor","tag","getLutData","lutDataSet","lutDescriptor","lutData","populatePaletteColorLut","numLutEntries","x00281201","lutBitsAllocated","populateSmallestLargestPixelValues","int16","x00281101","getLUT","numLUTEntries","firstValueMapped","numBitsPerEntry","id","lutSequence","items","luts","getMinStoredPixelValue","floatString","minStoredPixelValue","minModalityLutValue","x00283000","valueAsString","modalityLUTOutputPixelRepresentation","x00283010","x00540016","firstRadiopharmaceuticalInfoDataSet","firstColonIndex","indexOf","frameStr","isBitSet","byte","bitPos","bytePos","nextTaskId","tasks","webWorkers","defaultConfig","maxWebWorkers","navigator","hardwareConcurrency","startWebWorkersOnDemand","webWorkerPath","webWorkerTaskPaths","taskConfiguration","decodeTask","loadCodecsOnStartup","initializeCodecsOnStartup","codecsPath","config","statistics","numWebWorkers","numTasksQueued","numTasksExecuting","numTasksCompleted","totalTaskTimeInMS","totalTimeDelayedInMS","startTaskOnWebWorker","task","added","worker","postMessage","taskType","workerIndex","spawnWebWorker","handleMessageFromWorker","msg","Worker","addEventListener","initialize","configObject","loadWebWorkerTask","sourcePath","taskConfig","taskId","splice","setTaskPriority","cancelTask","reason","getStatistics","calculateMinMax","mustAssign","isNumber","console","warn","numValue","shouldShift","swap16","val","decodeBigEndian","arrayBuffer","byteOffset","decodeJpx","jpxImage","JpxImage","parse","tileCount","tiles","openJPEG","decodeOpenJPEG","bytesPerPixel","signed","dataPtr","_malloc","writeArrayToMemory","imagePtrPtr","imageSizePtr","imageSizeXPtr","imageSizeYPtr","imageSizeCompPtr","t0","ret","ccall","log","_free","imagePtr","sx","sy","nbChannels","perf_timetodecode","src32","Int32Array","HEAP32","from","t1","decodeOpenJpeg2000","initializeJPEG2000","OpenJPEG","_jp2_decode","decodeJPEG2000","decodeJPEGBaseline","JpegImage","jpeg","colorTransform","getData","getData16","charLS","jpegLSDecode","isSigned","widthPtr","heightPtr","bitsPerSamplePtr","stridePtr","allowedLossyErrorPtr","componentsPtr","interleaveModePtr","bitsPerSample","stride","components","allowedLossyError","interleaveMode","set","HEAP8","HEAP16","initializeJPEGLS","CharLS","_jpegls_decode","decodeJPEGLS","decodeJPEGLossless","lossless","Decoder","byteOutput","decoder","decompressedData","decode","decodeLittleEndian","decodeRLE","decode8Planar","decode8","decode16","frameData","frameSize","outFrame","ArrayBuffer","DataView","Int8Array","out","outIndex","numSegments","getInt32","s","inIndex","maxIndex","endOfSegment","n","highByte","getMinMax","storedPixelData","storedPixel"],"mappings":"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","file":"cornerstoneWADOImageLoader.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"cornerstoneWADOImageLoader\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cornerstoneWADOImageLoader\"] = factory();\n\telse\n\t\troot[\"cornerstoneWADOImageLoader\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./imageLoader/index.js\");\n","/* eslint import/extensions:0 */\nimport registerLoaders from './imageLoader/registerLoaders.js';\n\nlet cornerstone;\nlet dicomParser;\n\nconst external = {\n  set cornerstone (cs) {\n    cornerstone = cs;\n\n    registerLoaders(cornerstone);\n  },\n  get cornerstone () {\n    if (!cornerstone) {\n      if (window && window.cornerstone) {\n        cornerstone = window.cornerstone;\n\n        registerLoaders(cornerstone);\n      } else {\n        throw new Error('cornerstoneWADOImageLoader requires a copy of Cornerstone to work properly. Please add cornerstoneWADOImageLoader.external.cornerstone = cornerstone; to your application.');\n      }\n    }\n\n    return cornerstone;\n  },\n  set dicomParser (dp) {\n    dicomParser = dp;\n  },\n  get dicomParser () {\n    if (!dicomParser) {\n      if (window && window.dicomParser) {\n        dicomParser = window.dicomParser;\n      } else {\n        throw new Error('cornerstoneWADOImageLoader requires a copy of dicomParser to work properly. Please add cornerstoneWADOImageLoader.external.dicomParser = dicomParser; to your application.');\n      }\n    }\n\n    return dicomParser;\n  }\n};\n\nexport default external;\n","/* eslint no-bitwise: 0 */\n\nfunction convertLUTto8Bit (lut, shift) {\n  const numEntries = lut.length;\n  const cleanedLUT = new Uint8ClampedArray(numEntries);\n\n  for (let i = 0; i < numEntries; ++i) {\n    cleanedLUT[i] = lut[i] >> shift;\n  }\n\n  return cleanedLUT;\n}\n\n/**\n * Convert pixel data with PALETTE COLOR Photometric Interpretation to RGBA\n *\n * @param {ImageFrame} imageFrame\n * @param {Uint8ClampedArray} rgbaBuffer\n * @returns {void}\n */\nexport default function (imageFrame, rgbaBuffer) {\n  const numPixels = imageFrame.columns * imageFrame.rows;\n  const pixelData = imageFrame.pixelData;\n  const rData = imageFrame.redPaletteColorLookupTableData;\n  const gData = imageFrame.greenPaletteColorLookupTableData;\n  const bData = imageFrame.bluePaletteColorLookupTableData;\n  const len = imageFrame.redPaletteColorLookupTableData.length;\n  let palIndex = 0;\n  let rgbaIndex = 0;\n\n  const start = imageFrame.redPaletteColorLookupTableDescriptor[1];\n  const shift = imageFrame.redPaletteColorLookupTableDescriptor[2] === 8 ? 0 : 8;\n\n  const rDataCleaned = convertLUTto8Bit(rData, shift);\n  const gDataCleaned = convertLUTto8Bit(gData, shift);\n  const bDataCleaned = convertLUTto8Bit(bData, shift);\n\n  for (let i = 0; i < numPixels; ++i) {\n    let value = pixelData[palIndex++];\n\n    if (value < start) {\n      value = 0;\n    } else if (value > start + len - 1) {\n      value = len - 1;\n    } else {\n      value -= start;\n    }\n\n    rgbaBuffer[rgbaIndex++] = rDataCleaned[value];\n    rgbaBuffer[rgbaIndex++] = gDataCleaned[value];\n    rgbaBuffer[rgbaIndex++] = bDataCleaned[value];\n    rgbaBuffer[rgbaIndex++] = 255;\n  }\n}\n","export default function (imageFrame, rgbaBuffer) {\n  if (imageFrame === undefined) {\n    throw new Error('decodeRGB: rgbBuffer must not be undefined');\n  }\n  if (imageFrame.length % 3 !== 0) {\n    throw new Error('decodeRGB: rgbBuffer length must be divisible by 3');\n  }\n\n  const numPixels = imageFrame.length / 3;\n  let rgbIndex = 0;\n  let rgbaIndex = 0;\n\n  for (let i = 0; i < numPixels; i++) {\n    rgbaBuffer[rgbaIndex++] = imageFrame[rgbIndex++]; // red\n    rgbaBuffer[rgbaIndex++] = imageFrame[rgbIndex++]; // green\n    rgbaBuffer[rgbaIndex++] = imageFrame[rgbIndex++]; // blue\n    rgbaBuffer[rgbaIndex++] = 255; // alpha\n  }\n}\n","export default function (imageFrame, rgbaBuffer) {\n  if (imageFrame === undefined) {\n    throw new Error('decodeRGB: rgbBuffer must not be undefined');\n  }\n  if (imageFrame.length % 3 !== 0) {\n    throw new Error('decodeRGB: rgbBuffer length must be divisible by 3');\n  }\n\n  const numPixels = imageFrame.length / 3;\n  let rgbaIndex = 0;\n  let rIndex = 0;\n  let gIndex = numPixels;\n  let bIndex = numPixels * 2;\n\n  for (let i = 0; i < numPixels; i++) {\n    rgbaBuffer[rgbaIndex++] = imageFrame[rIndex++]; // red\n    rgbaBuffer[rgbaIndex++] = imageFrame[gIndex++]; // green\n    rgbaBuffer[rgbaIndex++] = imageFrame[bIndex++]; // blue\n    rgbaBuffer[rgbaIndex++] = 255; // alpha\n  }\n}\n","export default function (imageFrame, rgbaBuffer) {\n  if (imageFrame === undefined) {\n    throw new Error('decodeRGB: ybrBuffer must not be undefined');\n  }\n  if (imageFrame.length % 3 !== 0) {\n    throw new Error('decodeRGB: ybrBuffer length must be divisble by 3');\n  }\n\n  const numPixels = imageFrame.length / 3;\n  let ybrIndex = 0;\n  let rgbaIndex = 0;\n\n  for (let i = 0; i < numPixels; i++) {\n    const y = imageFrame[ybrIndex++];\n    const cb = imageFrame[ybrIndex++];\n    const cr = imageFrame[ybrIndex++];\n\n    rgbaBuffer[rgbaIndex++] = y + 1.40200 * (cr - 128);// red\n    rgbaBuffer[rgbaIndex++] = y - 0.34414 * (cb - 128) - 0.71414 * (cr - 128); // green\n    rgbaBuffer[rgbaIndex++] = y + 1.77200 * (cb - 128); // blue\n    rgbaBuffer[rgbaIndex++] = 255; // alpha\n  }\n}\n","export default function (imageFrame, rgbaBuffer) {\n  if (imageFrame === undefined) {\n    throw new Error('decodeRGB: ybrBuffer must not be undefined');\n  }\n  if (imageFrame.length % 3 !== 0) {\n    throw new Error('decodeRGB: ybrBuffer length must be divisble by 3');\n  }\n\n  const numPixels = imageFrame.length / 3;\n  let rgbaIndex = 0;\n  let yIndex = 0;\n  let cbIndex = numPixels;\n  let crIndex = numPixels * 2;\n\n  for (let i = 0; i < numPixels; i++) {\n    const y = imageFrame[yIndex++];\n    const cb = imageFrame[cbIndex++];\n    const cr = imageFrame[crIndex++];\n\n    rgbaBuffer[rgbaIndex++] = y + 1.40200 * (cr - 128);// red\n    rgbaBuffer[rgbaIndex++] = y - 0.34414 * (cb - 128) - 0.71414 * (cr - 128); // green\n    rgbaBuffer[rgbaIndex++] = y + 1.77200 * (cb - 128); // blue\n    rgbaBuffer[rgbaIndex++] = 255; // alpha\n  }\n}\n","export { default as convertRGBColorByPixel } from './convertRGBColorByPixel.js';\nexport { default as convertRGBColorByPlane } from './convertRGBColorByPlane.js';\nexport { default as convertYBRFullByPixel } from './convertYBRFullByPixel.js';\nexport { default as convertYBRFullByPlane } from './convertYBRFullByPlane.js';\nexport { default as convertPALETTECOLOR } from './convertPALETTECOLOR.js';\n","import { setOptions } from './internal/index.js';\n\nfunction configure (options) {\n  setOptions(options);\n}\n\nexport default configure;\n","import { convertRGBColorByPixel, convertRGBColorByPlane,\n  convertYBRFullByPixel, convertYBRFullByPlane,\n  convertPALETTECOLOR } from './colorSpaceConverters/index.js';\n\nfunction convertRGB (imageFrame, rgbaBuffer) {\n  if (imageFrame.planarConfiguration === 0) {\n    convertRGBColorByPixel(imageFrame.pixelData, rgbaBuffer);\n  } else {\n    convertRGBColorByPlane(imageFrame.pixelData, rgbaBuffer);\n  }\n}\n\nfunction convertYBRFull (imageFrame, rgbaBuffer) {\n  if (imageFrame.planarConfiguration === 0) {\n    convertYBRFullByPixel(imageFrame.pixelData, rgbaBuffer);\n  } else {\n    convertYBRFullByPlane(imageFrame.pixelData, rgbaBuffer);\n  }\n}\n\nexport default function convertColorSpace (imageFrame, imageData) {\n  const rgbaBuffer = imageData.data;\n  // convert based on the photometric interpretation\n\n  if (imageFrame.photometricInterpretation === 'RGB') {\n    convertRGB(imageFrame, rgbaBuffer);\n  } else if (imageFrame.photometricInterpretation === 'YBR_RCT') {\n    convertRGB(imageFrame, rgbaBuffer);\n  } else if (imageFrame.photometricInterpretation === 'YBR_ICT') {\n    convertRGB(imageFrame, rgbaBuffer);\n  } else if (imageFrame.photometricInterpretation === 'PALETTE COLOR') {\n    convertPALETTECOLOR(imageFrame, rgbaBuffer);\n  } else if (imageFrame.photometricInterpretation === 'YBR_FULL_422') {\n    convertRGB(imageFrame, rgbaBuffer);\n  } else if (imageFrame.photometricInterpretation === 'YBR_FULL') {\n    convertYBRFull(imageFrame, rgbaBuffer);\n  } else {\n    throw new Error(`No color space conversion for photometric interpretation ${imageFrame.photometricInterpretation}`);\n  }\n}\n","import external from '../externalModules.js';\nimport getImageFrame from './getImageFrame.js';\nimport decodeImageFrame from './decodeImageFrame.js';\nimport isColorImageFn from './isColorImage.js';\nimport convertColorSpace from './convertColorSpace.js';\nimport getMinMax from '../shared/getMinMax.js';\nimport isJPEGBaseline8BitColor from './isJPEGBaseline8BitColor.js';\n\nlet lastImageIdDrawn = '';\n\nfunction isModalityLUTForDisplay (sopClassUid) {\n  // special case for XA and XRF\n  // https://groups.google.com/forum/#!searchin/comp.protocols.dicom/Modality$20LUT$20XA/comp.protocols.dicom/UBxhOZ2anJ0/D0R_QP8V2wIJ\n  return sopClassUid !== '1.2.840.10008.5.1.4.1.1.12.1' && // XA\n         sopClassUid !== '1.2.840.10008.5.1.4.1.1.12.2.1'; // XRF\n}\n\nfunction convertToIntPixelData (floatPixelData) {\n  const floatMinMax = getMinMax(floatPixelData);\n  const floatRange = Math.abs(floatMinMax.max - floatMinMax.min);\n  const intRange = 65535;\n  const slope = floatRange / intRange;\n  const intercept = floatMinMax.min;\n  const numPixels = floatPixelData.length;\n  const intPixelData = new Uint16Array(numPixels);\n  let min = 65535;\n  let max = 0;\n\n  for (let i = 0; i < numPixels; i++) {\n    const rescaledPixel = Math.floor((floatPixelData[i] - intercept) / slope);\n\n    intPixelData[i] = rescaledPixel;\n    min = Math.min(min, rescaledPixel);\n    max = Math.max(max, rescaledPixel);\n  }\n\n  return {\n    min,\n    max,\n    intPixelData,\n    slope,\n    intercept\n  };\n}\n\n/**\n * Helper function to set pixel data to the right typed array.  This is needed because web workers\n * can transfer array buffers but not typed arrays\n * @param imageFrame\n */\nfunction setPixelDataType (imageFrame) {\n  if (imageFrame.bitsAllocated === 32) {\n    imageFrame.pixelData = new Float32Array(imageFrame.pixelData);\n  } else if (imageFrame.bitsAllocated === 16) {\n    if (imageFrame.pixelRepresentation === 0) {\n      imageFrame.pixelData = new Uint16Array(imageFrame.pixelData);\n    } else {\n      imageFrame.pixelData = new Int16Array(imageFrame.pixelData);\n    }\n  } else {\n    imageFrame.pixelData = new Uint8Array(imageFrame.pixelData);\n  }\n}\n\nfunction createImage (imageId, pixelData, transferSyntax, options) {\n\n  if (!pixelData || !pixelData.length) {\n    return Promise.reject(new Error('The file does not contain image data.'));\n  }\n\n  const { cornerstone } = external;\n  const canvas = document.createElement('canvas');\n  const imageFrame = getImageFrame(imageId);\n  const decodePromise = decodeImageFrame(imageFrame, transferSyntax, pixelData, canvas, options);\n\n  return new Promise((resolve, reject) => {\n    decodePromise.then(function (imageFrame) {\n      const imagePlaneModule = cornerstone.metaData.get('imagePlaneModule', imageId) || {};\n      const voiLutModule = cornerstone.metaData.get('voiLutModule', imageId) || {};\n      const modalityLutModule = cornerstone.metaData.get('modalityLutModule', imageId) || {};\n      const sopCommonModule = cornerstone.metaData.get('sopCommonModule', imageId) || {};\n      const isColorImage = isColorImageFn(imageFrame.photometricInterpretation);\n\n      // JPEGBaseline (8 bits) is already returning the pixel data in the right format (rgba)\n      // because it's using a canvas to load and decode images.\n      if (!isJPEGBaseline8BitColor(imageFrame, transferSyntax)) {\n        setPixelDataType(imageFrame);\n\n        // convert color space\n        if (isColorImage) {\n          // setup the canvas context\n          canvas.height = imageFrame.rows;\n          canvas.width = imageFrame.columns;\n\n          const context = canvas.getContext('2d');\n          const imageData = context.createImageData(imageFrame.columns, imageFrame.rows);\n\n          convertColorSpace(imageFrame, imageData);\n          imageFrame.imageData = imageData;\n          imageFrame.pixelData = imageData.data;\n\n          // calculate smallest and largest PixelValue of the converted pixelData\n          const minMax = getMinMax(imageFrame.pixelData);\n\n          imageFrame.smallestPixelValue = minMax.min;\n          imageFrame.largestPixelValue = minMax.max;\n        }\n      }\n\n      const image = {\n        imageId,\n        color: isColorImage,\n        columnPixelSpacing: imagePlaneModule.pixelSpacing ? imagePlaneModule.pixelSpacing[1] : undefined,\n        columns: imageFrame.columns,\n        height: imageFrame.rows,\n        intercept: modalityLutModule.rescaleIntercept ? modalityLutModule.rescaleIntercept : 0,\n        invert: imageFrame.photometricInterpretation === 'MONOCHROME1',\n        minPixelValue: imageFrame.smallestPixelValue,\n        maxPixelValue: imageFrame.largestPixelValue,\n        rowPixelSpacing: imagePlaneModule.pixelSpacing ? imagePlaneModule.pixelSpacing[0] : undefined,\n        rows: imageFrame.rows,\n        sizeInBytes: imageFrame.pixelData.length,\n        slope: modalityLutModule.rescaleSlope ? modalityLutModule.rescaleSlope : 1,\n        width: imageFrame.columns,\n        windowCenter: voiLutModule.windowCenter ? voiLutModule.windowCenter[0] : undefined,\n        windowWidth: voiLutModule.windowWidth ? voiLutModule.windowWidth[0] : undefined,\n        decodeTimeInMS: imageFrame.decodeTimeInMS,\n        floatPixelData: undefined\n      };\n\n      // add function to return pixel data\n      if (imageFrame.pixelData instanceof Float32Array) {\n        const floatPixelData = imageFrame.pixelData;\n        const results = convertToIntPixelData(floatPixelData);\n\n        image.minPixelValue = results.min;\n        image.maxPixelValue = results.max;\n        image.slope = results.slope;\n        image.intercept = results.intercept;\n        image.floatPixelData = floatPixelData;\n        image.getPixelData = () => results.intPixelData;\n      } else {\n        image.getPixelData = () => imageFrame.pixelData;\n      }\n\n      if (image.color) {\n        image.getCanvas = function () {\n          if (lastImageIdDrawn === imageId) {\n            return canvas;\n          }\n\n          canvas.height = image.rows;\n          canvas.width = image.columns;\n          const context = canvas.getContext('2d');\n\n          context.putImageData(imageFrame.imageData, 0, 0);\n          lastImageIdDrawn = imageId;\n\n          return canvas;\n        };\n      }\n\n      // Modality LUT\n      if (modalityLutModule.modalityLUTSequence &&\n        modalityLutModule.modalityLUTSequence.length > 0 &&\n        isModalityLUTForDisplay(sopCommonModule.sopClassUID)) {\n        image.modalityLUT = modalityLutModule.modalityLUTSequence[0];\n      }\n\n      // VOI LUT\n      if (voiLutModule.voiLUTSequence &&\n        voiLutModule.voiLUTSequence.length > 0) {\n        image.voiLUT = voiLutModule.voiLUTSequence[0];\n      }\n\n      if (image.color) {\n        image.windowWidth = 255;\n        image.windowCenter = 127;\n      }\n\n      // set the ww/wc to cover the dynamic range of the image if no values are supplied\n      if (image.windowCenter === undefined || image.windowWidth === undefined) {\n        const maxVoi = image.maxPixelValue * image.slope + image.intercept;\n        const minVoi = image.minPixelValue * image.slope + image.intercept;\n\n        image.windowWidth = maxVoi - minVoi;\n        image.windowCenter = (maxVoi + minVoi) / 2;\n      }\n      resolve(image);\n    }, reject);\n  });\n}\n\nexport default createImage;\n","import { getOptions } from './internal/options.js';\nimport webWorkerManager from './webWorkerManager.js';\nimport decodeJPEGBaseline8BitColor from './decodeJPEGBaseline8BitColor.js';\nimport { default as decodeImageFrameHandler } from '../shared/decodeImageFrame.js';\nimport calculateMinMax from '../shared/calculateMinMax.js';\nimport { initializeJPEG2000 } from '../shared/decoders/decodeJPEG2000.js';\nimport { initializeJPEGLS } from '../shared/decoders/decodeJPEGLS.js';\n\nlet codecsInitialized = false;\n\nfunction processDecodeTask (imageFrame, transferSyntax, pixelData, options) {\n  const priority = options.priority || undefined;\n  const transferList = options.transferPixelData ? [pixelData.buffer] : undefined;\n  const loaderOptions = getOptions();\n  const { strict, decodeConfig, useWebWorkers } = loaderOptions;\n\n  if (useWebWorkers === false) {\n    if (codecsInitialized === false) {\n      initializeJPEG2000(decodeConfig);\n      initializeJPEGLS(decodeConfig);\n\n      codecsInitialized = true;\n    }\n\n    return new Promise((resolve, reject) => {\n      try {\n        const decodeArguments = [imageFrame, transferSyntax, pixelData, decodeConfig, options];\n        const decodedImageFrame = decodeImageFrameHandler(...decodeArguments);\n\n        calculateMinMax(decodedImageFrame, strict);\n\n        resolve(decodedImageFrame);\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  return webWorkerManager.addTask(\n    'decodeTask',\n    {\n      imageFrame,\n      transferSyntax,\n      pixelData,\n      options\n    }, priority, transferList).promise;\n}\n\nfunction decodeImageFrame (imageFrame, transferSyntax, pixelData, canvas, options = {}) {\n  // TODO: Turn this into a switch statement instead\n  if (transferSyntax === '1.2.840.10008.1.2') {\n    // Implicit VR Little Endian\n    return processDecodeTask(imageFrame, transferSyntax, pixelData, options);\n  } else if (transferSyntax === '1.2.840.10008.1.2.1') {\n    // Explicit VR Little Endian\n    return processDecodeTask(imageFrame, transferSyntax, pixelData, options);\n  } else if (transferSyntax === '1.2.840.10008.1.2.2') {\n    // Explicit VR Big Endian (retired)\n    return processDecodeTask(imageFrame, transferSyntax, pixelData, options);\n  } else if (transferSyntax === '1.2.840.10008.1.2.1.99') {\n    // Deflate transfer syntax (deflated by dicomParser)\n    return processDecodeTask(imageFrame, transferSyntax, pixelData, options);\n  } else if (transferSyntax === '1.2.840.10008.1.2.5') {\n    // RLE Lossless\n    return processDecodeTask(imageFrame, transferSyntax, pixelData, options);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.50') {\n    // JPEG Baseline lossy process 1 (8 bit)\n\n    // Handle 8-bit JPEG Baseline color images using the browser's built-in\n    // JPEG decoding\n    if (imageFrame.bitsAllocated === 8 &&\n       (imageFrame.samplesPerPixel === 3 || imageFrame.samplesPerPixel === 4)) {\n      return decodeJPEGBaseline8BitColor(imageFrame, pixelData, canvas);\n    }\n\n    return processDecodeTask(imageFrame, transferSyntax, pixelData, options);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.51') {\n    // JPEG Baseline lossy process 2 & 4 (12 bit)\n    return processDecodeTask(imageFrame, transferSyntax, pixelData, options);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.57') {\n    // JPEG Lossless, Nonhierarchical (Processes 14)\n    return processDecodeTask(imageFrame, transferSyntax, pixelData, options);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.70') {\n    // JPEG Lossless, Nonhierarchical (Processes 14 [Selection 1])\n    return processDecodeTask(imageFrame, transferSyntax, pixelData, options);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.80') {\n    // JPEG-LS Lossless Image Compression\n    return processDecodeTask(imageFrame, transferSyntax, pixelData, options);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.81') {\n    // JPEG-LS Lossy (Near-Lossless) Image Compression\n    return processDecodeTask(imageFrame, transferSyntax, pixelData, options);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.90') {\n    // JPEG 2000 Lossless\n    return processDecodeTask(imageFrame, transferSyntax, pixelData, options);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.91') {\n    // JPEG 2000 Lossy\n    return processDecodeTask(imageFrame, transferSyntax, pixelData, options);\n  }\n\n  /* Don't know if these work...\n   // JPEG 2000 Part 2 Multicomponent Image Compression (Lossless Only)\n   else if(transferSyntax === \"1.2.840.10008.1.2.4.92\")\n   {\n   return cornerstoneWADOImageLoader.decodeJPEG2000(dataSet, frame);\n   }\n   // JPEG 2000 Part 2 Multicomponent Image Compression\n   else if(transferSyntax === \"1.2.840.10008.1.2.4.93\")\n   {\n   return cornerstoneWADOImageLoader.decodeJPEG2000(dataSet, frame);\n   }\n   */\n\n  return new Promise((resolve, reject) => {\n    reject(new Error(`No decoder for transfer syntax ${transferSyntax}`));\n  });\n}\n\nexport default decodeImageFrame;\n","import getMinMax from '../shared/getMinMax.js';\n\n/**\n * Special decoder for 8 bit jpeg that leverages the browser's built in JPEG decoder for increased performance\n */\n\nfunction arrayBufferToString (buffer) {\n  return binaryToString(String.fromCharCode.apply(null, Array.prototype.slice.apply(new Uint8Array(buffer))));\n}\n\nfunction binaryToString (binary) {\n  let error;\n\n  try {\n    return decodeURIComponent(escape(binary));\n  } catch (_error) {\n    error = _error;\n    if (error instanceof URIError) {\n      return binary;\n    }\n    throw error;\n\n  }\n}\n\nfunction decodeJPEGBaseline8BitColor (imageFrame, pixelData, canvas) {\n  const start = new Date().getTime();\n  const imgBlob = new Blob([pixelData], { type: 'image/jpeg' });\n\n  return new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n\n    if (fileReader.readAsBinaryString === undefined) {\n      fileReader.readAsArrayBuffer(imgBlob);\n    } else {\n      fileReader.readAsBinaryString(imgBlob); // doesn't work on IE11\n    }\n\n    fileReader.onload = function () {\n      const img = new Image();\n\n      img.onload = function () {\n        canvas.height = img.height;\n        canvas.width = img.width;\n        imageFrame.rows = img.height;\n        imageFrame.columns = img.width;\n        const context = canvas.getContext('2d');\n\n        context.drawImage(this, 0, 0);\n        const imageData = context.getImageData(0, 0, img.width, img.height);\n        const end = new Date().getTime();\n\n        imageFrame.pixelData = imageData.data;\n        imageFrame.imageData = imageData;\n        imageFrame.decodeTimeInMS = end - start;\n\n        // calculate smallest and largest PixelValue\n        const minMax = getMinMax(imageFrame.pixelData);\n\n        imageFrame.smallestPixelValue = minMax.min;\n        imageFrame.largestPixelValue = minMax.max;\n\n        resolve(imageFrame);\n      };\n\n      img.onerror = function (error) {\n        reject(error);\n      };\n\n      if (fileReader.readAsBinaryString === undefined) {\n        img.src = `data:image/jpeg;base64,${window.btoa(arrayBufferToString(fileReader.result))}`;\n      } else {\n        img.src = `data:image/jpeg;base64,${window.btoa(fileReader.result)}`; // doesn't work on IE11\n      }\n    };\n\n    fileReader.onerror = (e) => {\n      reject(e);\n    };\n  });\n}\n\nexport default decodeJPEGBaseline8BitColor;\n","import external from '../externalModules.js';\n\nfunction getImageFrame (imageId) {\n  const { cornerstone } = external;\n  const imagePixelModule = cornerstone.metaData.get('imagePixelModule', imageId);\n\n  return {\n    samplesPerPixel: imagePixelModule.samplesPerPixel,\n    photometricInterpretation: imagePixelModule.photometricInterpretation,\n    planarConfiguration: imagePixelModule.planarConfiguration,\n    rows: imagePixelModule.rows,\n    columns: imagePixelModule.columns,\n    bitsAllocated: imagePixelModule.bitsAllocated,\n    bitsStored: imagePixelModule.bitsStored,\n    pixelRepresentation: imagePixelModule.pixelRepresentation, // 0 = unsigned,\n    smallestPixelValue: imagePixelModule.smallestPixelValue,\n    largestPixelValue: imagePixelModule.largestPixelValue,\n    redPaletteColorLookupTableDescriptor: imagePixelModule.redPaletteColorLookupTableDescriptor,\n    greenPaletteColorLookupTableDescriptor: imagePixelModule.greenPaletteColorLookupTableDescriptor,\n    bluePaletteColorLookupTableDescriptor: imagePixelModule.bluePaletteColorLookupTableDescriptor,\n    redPaletteColorLookupTableData: imagePixelModule.redPaletteColorLookupTableData,\n    greenPaletteColorLookupTableData: imagePixelModule.greenPaletteColorLookupTableData,\n    bluePaletteColorLookupTableData: imagePixelModule.bluePaletteColorLookupTableData,\n    pixelData: undefined // populated later after decoding\n  };\n}\n\nexport default getImageFrame;\n","export * from './colorSpaceConverters/index.js';\n\nexport { default as wadouri } from './wadouri/index.js';\nexport { default as wadors } from './wadors/index.js';\nexport { default as configure } from './configure.js';\nexport { default as convertColorSpace } from './convertColorSpace.js';\nexport { default as createImage } from './createImage.js';\nexport { default as decodeImageFrame } from './decodeImageFrame.js';\nexport { default as decodeJPEGBaseline8BitColor } from './decodeJPEGBaseline8BitColor.js';\nexport { default as getImageFrame } from './getImageFrame.js';\nexport { default as getMinMax } from '../shared/getMinMax.js';\nexport { default as isColorImage } from './isColorImage.js';\nexport { default as isJPEGBaseline8BitColor } from './isJPEGBaseline8BitColor.js';\nexport { default as webWorkerManager } from './webWorkerManager.js';\nexport { default as version } from '../version.js';\nexport { internal } from './internal/index.js';\nexport { default as external } from '../externalModules.js';\n","import { default as xhrRequest } from './xhrRequest.js';\nimport { setOptions, getOptions } from './options.js';\n\nconst internal = {\n  xhrRequest,\n  setOptions,\n  getOptions\n};\n\nexport { setOptions, getOptions, xhrRequest, internal };\n","let options = {\n  // callback allowing customization of the xhr (e.g. adding custom auth headers, cors, etc)\n  beforeSend (/* xhr, imageId */) {\n  },\n  // callback allowing modification of newly created image objects\n  imageCreated (/* image */) {\n  },\n  strict: false,\n  useWebWorkers: true,\n  decodeConfig: {\n    usePDFJS: false\n  }\n};\n\nexport function setOptions (newOptions) {\n  options = Object.assign(options, newOptions);\n}\n\nexport function getOptions () {\n  return options;\n}\n","import external from '../../externalModules.js';\nimport { getOptions } from './options.js';\n\nfunction xhrRequest (url, imageId, headers = {}, params = {}) {\n  const { cornerstone } = external;\n  const options = getOptions();\n\n  // Make the request for the DICOM P10 SOP Instance\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n\n    xhr.open('get', url, true);\n    xhr.responseType = 'arraybuffer';\n    options.beforeSend(xhr, imageId);\n    Object.keys(headers).forEach(function (key) {\n     // xhr.setRequestHeader(key, headers[key]);\n    });\n\n    params.deferred = {\n      resolve,\n      reject\n    };\n    params.url = url;\n    params.imageId = imageId;\n\n    // Event triggered when downloading an image starts\n    xhr.onloadstart = function (event) {\n      // Action\n      if (options.onloadstart) {\n        options.onloadstart(event, params);\n      }\n\n      // Event\n      const eventData = {\n        url,\n        imageId\n      };\n\n      cornerstone.triggerEvent(cornerstone.events, 'cornerstoneimageloadstart', eventData);\n    };\n\n    // Event triggered when downloading an image ends\n    xhr.onloadend = function (event) {\n      // Action\n      if (options.onloadend) {\n        options.onloadend(event, params);\n      }\n\n      const eventData = {\n        url,\n        imageId\n      };\n\n      // Event\n      cornerstone.triggerEvent(cornerstone.events, 'cornerstoneimageloadend', eventData);\n    };\n\n    // handle response data\n    xhr.onreadystatechange = function (event) {\n      // Action\n      if (options.onreadystatechange) {\n        options.onreadystatechange(event, params);\n\n        return;\n      }\n\n      // Default action\n      // TODO: consider sending out progress messages here as we receive the pixel data\n      if (xhr.readyState === 4) {\n        if (xhr.status === 200) {\n          resolve(xhr.response, xhr);\n        } else {\n          // request failed, reject the Promise\n          reject(xhr);\n        }\n      }\n    };\n\n    // Event triggered when downloading an image progresses\n    xhr.onprogress = function (oProgress) {\n      // console.log('progress:',oProgress)\n      const loaded = oProgress.loaded; // evt.loaded the bytes browser receive\n      let total;\n      let percentComplete;\n\n      if (oProgress.lengthComputable) {\n        total = oProgress.total; // evt.total the total bytes seted by the header\n        percentComplete = Math.round((loaded / total) * 100);\n      }\n\n      // Action\n      if (options.onprogress) {\n        options.onprogress(oProgress, params);\n      }\n\n      // Event\n      const eventData = {\n        url,\n        imageId,\n        loaded,\n        total,\n        percentComplete\n      };\n\n      cornerstone.triggerEvent(cornerstone.events, 'cornerstoneimageloadprogress', eventData);\n    };\n\n    xhr.send();\n  });\n}\n\nexport default xhrRequest;\n","export default function (photoMetricInterpretation) {\n  return (photoMetricInterpretation === 'RGB' ||\n    photoMetricInterpretation === 'PALETTE COLOR' ||\n    photoMetricInterpretation === 'YBR_FULL' ||\n    photoMetricInterpretation === 'YBR_FULL_422' ||\n    photoMetricInterpretation === 'YBR_PARTIAL_422' ||\n    photoMetricInterpretation === 'YBR_PARTIAL_420' ||\n    photoMetricInterpretation === 'YBR_RCT' ||\n    photoMetricInterpretation === 'YBR_ICT');\n}\n","function isJPEGBaseline8BitColor (imageFrame, transferSyntax) {\n  transferSyntax = transferSyntax || imageFrame.transferSyntax;\n\n  if (imageFrame.bitsAllocated === 8 &&\n     transferSyntax === '1.2.840.10008.1.2.4.50' &&\n     (imageFrame.samplesPerPixel === 3 || imageFrame.samplesPerPixel === 4)) {\n    return true;\n  }\n}\n\nexport default isJPEGBaseline8BitColor;\n","import wadors from './wadors/index.js';\nimport wadouri from './wadouri/index.js';\n\n/**\n * Register the WADO-URI and WADO-RS image loaders and metaData providers\n * with an instance of Cornerstone Core.\n *\n * @param cornerstone The Cornerstone Core library to register the image loaders with\n */\nfunction registerLoaders (cornerstone) {\n  wadors.register(cornerstone);\n  wadouri.register(cornerstone);\n}\n\nexport default registerLoaders;\n","function checkToken (token, data, dataOffset) {\n\n  if (dataOffset + token.length > data.length) {\n    return false;\n  }\n\n  let endIndex = dataOffset;\n\n  for (let i = 0; i < token.length; i++) {\n    if (token[i] !== data[endIndex++]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction stringToUint8Array (str) {\n  const uint = new Uint8Array(str.length);\n\n  for (let i = 0, j = str.length; i < j; i++) {\n    uint[i] = str.charCodeAt(i);\n  }\n\n  return uint;\n}\n\nfunction findIndexOfString (data, str, offset) {\n\n  offset = offset || 0;\n\n  const token = stringToUint8Array(str);\n\n  for (let i = offset; i < data.length; i++) {\n    if (token[0] === data[i]) {\n      // console.log('match @', i);\n      if (checkToken(token, data, i)) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\nexport default findIndexOfString;\n","import { xhrRequest } from '../internal/index.js';\nimport findIndexOfString from './findIndexOfString.js';\n\nfunction findBoundary (header) {\n  for (let i = 0; i < header.length; i++) {\n    if (header[i].substr(0, 2) === '--') {\n      return header[i];\n    }\n  }\n}\n\nfunction findContentType (header) {\n  for (let i = 0; i < header.length; i++) {\n    if (header[i].substr(0, 13) === 'Content-Type:') {\n      return header[i].substr(13).trim();\n    }\n  }\n}\n\nfunction uint8ArrayToString (data, offset, length) {\n  offset = offset || 0;\n  length = length || data.length - offset;\n  let str = '';\n\n  for (let i = offset; i < offset + length; i++) {\n    str += String.fromCharCode(data[i]);\n  }\n\n  return str;\n}\n\nfunction getPixelData (uri, imageId, mediaType = 'application/octet-stream') {\n  const headers = {\n    accept: mediaType\n  };\n\n  return new Promise((resolve, reject) => {\n    const loadPromise = xhrRequest(uri, imageId, headers);\n\n    loadPromise.then(function (imageFrameAsArrayBuffer/* , xhr*/) {\n\n      // request succeeded, Parse the multi-part mime response\n      const response = new Uint8Array(imageFrameAsArrayBuffer);\n\n      // First look for the multipart mime header\n      const tokenIndex = findIndexOfString(response, '\\r\\n\\r\\n');\n\n      if (tokenIndex === -1) {\n        reject(new Error('invalid response - no multipart mime header'));\n      }\n      const header = uint8ArrayToString(response, 0, tokenIndex);\n      // Now find the boundary  marker\n      const split = header.split('\\r\\n');\n      const boundary = findBoundary(split);\n\n      if (!boundary) {\n        reject(new Error('invalid response - no boundary marker'));\n      }\n      const offset = tokenIndex + 4; // skip over the \\r\\n\\r\\n\n\n      // find the terminal boundary marker\n      const endIndex = findIndexOfString(response, boundary, offset);\n\n      if (endIndex === -1) {\n        reject(new Error('invalid response - terminating boundary not found'));\n      }\n\n      // Remove \\r\\n from the length\n      const length = endIndex - offset - 2;\n\n      // return the info for this pixel data\n      resolve({\n        contentType: findContentType(split),\n        imageFrame: {\n          pixelData: new Uint8Array(imageFrameAsArrayBuffer, offset, length)\n        }\n      });\n    });\n  });\n}\n\nexport default getPixelData;\n","import { getNumberString,\n  getNumberValue,\n  getNumberValues,\n  getValue,\n  metaDataProvider } from './metaData/index.js';\n\nimport findIndexOfString from './findIndexOfString.js';\nimport getPixelData from './getPixelData.js';\nimport metaDataManager from './metaDataManager.js';\nimport loadImage from './loadImage.js';\nimport register from './register.js';\n\nconst metaData = {\n  getNumberString,\n  getNumberValue,\n  getNumberValues,\n  getValue,\n  metaDataProvider\n};\n\nexport default {\n  metaData,\n  findIndexOfString,\n  getPixelData,\n  loadImage,\n  metaDataManager,\n  register\n};\n","import metaDataManager from './metaDataManager.js';\nimport getPixelData from './getPixelData.js';\nimport createImage from '../createImage.js';\n\n/**\n * Helper method to extract the transfer-syntax from the response of the server.\n * @param {string} contentType The value of the content-type header as returned by the WADO-RS server.\n * @return The transfer-syntax as announced by the server, or Implicit Little Endian by default.\n */\nexport function getTransferSyntaxForContentType (contentType) {\n  let transferSyntax = '1.2.840.10008.1.2'; // Default is Implicit Little Endian.\n\n  if (contentType) {\n    // Browse through the content type parameters\n    const parameters = contentType.split(';');\n\n    parameters.forEach(parameter => {\n      // Look for a transfer-syntax=XXXX pair\n      const parameterValues = parameter.split('=');\n\n      if (parameterValues.length !== 2) {\n        return;\n      }\n\n      if (parameterValues[0].trim() === 'transfer-syntax') {\n        transferSyntax = parameterValues[1].trim() || transferSyntax;\n      }\n    });\n  }\n\n  return transferSyntax;\n}\n\nfunction loadImage (imageId, options) {\n  const start = new Date().getTime();\n  const uri = imageId.substring(7);\n\n  const promise = new Promise((resolve, reject) => {\n    // check to make sure we have metadata for this imageId\n    const metaData = metaDataManager.get(imageId);\n\n    if (metaData === undefined) {\n      const error = new Error(`no metadata for imageId ${imageId}`);\n\n      return reject(error);\n    }\n\n    // TODO: load bulk data items that we might need\n    const mediaType = 'multipart/related; type=\"application/octet-stream\"'; // 'image/dicom+jp2';\n\n    // get the pixel data from the server\n    getPixelData(uri, imageId, mediaType).then((result) => {\n      const transferSyntax = getTransferSyntaxForContentType(result.contentType);\n      const pixelData = result.imageFrame.pixelData;\n      const imagePromise = createImage(imageId, pixelData, transferSyntax, options);\n\n      imagePromise.then((image) => {\n        // add the loadTimeInMS property\n        const end = new Date().getTime();\n\n        image.loadTimeInMS = end - start;\n        resolve(image);\n      }, reject);\n    }, reject);\n  });\n\n  return {\n    promise,\n    cancelFn: undefined\n  };\n}\n\nexport default loadImage;\n","import getValue from './getValue.js';\n\n/**\n * Returns the first string value as a Javascript number\n *\n * @param element - The javascript object for the specified element in the metadata\n * @param [index] - the index of the value in a multi-valued element, default is 0\n * @param [defaultValue] - The default value to return if the element does not exist\n * @returns {*}\n */\nfunction getNumberString (element, index, defaultValue) {\n  const value = getValue(element, index, defaultValue);\n\n  if (value === undefined) {\n    return;\n  }\n\n  return parseFloat(value);\n}\n\nexport default getNumberString;\n","import getValue from './getValue.js';\n\nfunction getNumberValue (element, index) {\n  const value = getValue(element, index);\n\n  if (value === undefined) {\n    return;\n  }\n\n  return parseFloat(value);\n}\n\nexport default getNumberValue;\n","\n\n/**\n * Returns the values as an array of javascript numbers\n *\n * @param element - The javascript object for the specified element in the metadata\n * @param [minimumLength] - the minimum number of values\n * @returns {*}\n */\nfunction getNumberValues (element, minimumLength) {\n  if (!element) {\n    return;\n  }\n  // Value is not present if the attribute has a zero length value\n  if (!element.Value) {\n    return;\n  }\n  // make sure we have the expected length\n  if (minimumLength && element.Value.length < minimumLength) {\n    return;\n  }\n\n  const values = [];\n\n  for (let i = 0; i < element.Value.length; i++) {\n    values.push(parseFloat(element.Value[i]));\n  }\n\n  return values;\n}\n\nexport default getNumberValues;\n","\n\n/**\n * Returns the raw value\n *\n * @param element - The javascript object for the specified element in the metadata\n * @param [index] - the index of the value in a multi-valued element, default is 0\n * @param [defaultValue] - The default value to return if the element does not exist\n * @returns {*}\n */\nfunction getValue (element, index, defaultValue) {\n  index = index || 0;\n  if (!element) {\n    return defaultValue;\n  }\n  // Value is not present if the attribute has a zero length value\n  if (!element.Value) {\n    return defaultValue;\n  }\n  // make sure we have the specified index\n  if (element.Value.length <= index) {\n    return defaultValue;\n  }\n\n  return element.Value[index];\n}\n\nexport default getValue;\n","export { default as getNumberString } from './getNumberString.js';\nexport { default as getNumberValue } from './getNumberValue.js';\nexport { default as getNumberValues } from './getNumberValues.js';\nexport { default as getValue } from './getValue.js';\nexport { default as metaDataProvider } from './metaDataProvider.js';\n","import external from '../../../externalModules.js';\nimport getNumberValues from './getNumberValues.js';\nimport getValue from './getValue.js';\nimport getNumberValue from './getNumberValue.js';\nimport metaDataManager from '../metaDataManager.js';\n\nfunction metaDataProvider (type, imageId) {\n  const { dicomParser } = external;\n  const metaData = metaDataManager.get(imageId);\n\n  if (!metaData) {\n    return;\n  }\n\n  if (type === 'generalSeriesModule') {\n    return {\n      modality: getValue(metaData['00080060']),\n      seriesInstanceUID: getValue(metaData['0020000e']),\n      seriesNumber: getNumberValue(metaData['00200011']),\n      studyInstanceUID: getValue(metaData['0020000d']),\n      seriesDate: dicomParser.parseDA(getValue(metaData['00080021'])),\n      seriesTime: dicomParser.parseTM(getValue(metaData['00080031'], 0, ''))\n    };\n  }\n\n  if (type === 'patientStudyModule') {\n    return {\n      patientAge: getNumberValue(metaData['00101010']),\n      patientSize: getNumberValue(metaData['00101020']),\n      patientWeight: getNumberValue(metaData['00101030'])\n    };\n  }\n\n  if (type === 'imagePlaneModule') {\n    const imageOrientationPatient = getNumberValues(metaData['00200037'], 6);\n    const imagePositionPatient = getNumberValues(metaData['00200032'], 3);\n    const pixelSpacing = getNumberValues(metaData['00280030'], 2);\n    let columnPixelSpacing = 1.0;\n    let rowPixelSpacing = 1.0;\n\n    if (pixelSpacing) {\n      rowPixelSpacing = pixelSpacing[0];\n      columnPixelSpacing = pixelSpacing[1];\n    }\n\n    let rowCosines = null;\n    let columnCosines = null;\n\n    if (imageOrientationPatient) {\n      rowCosines = [parseFloat(imageOrientationPatient[0]), parseFloat(imageOrientationPatient[1]), parseFloat(imageOrientationPatient[2])];\n      columnCosines = [parseFloat(imageOrientationPatient[3]), parseFloat(imageOrientationPatient[4]), parseFloat(imageOrientationPatient[5])];\n    }\n\n    return {\n      frameOfReferenceUID: getValue(metaData['00200052']),\n      rows: getNumberValue(metaData['00280010']),\n      columns: getNumberValue(metaData['00280011']),\n      imageOrientationPatient,\n      rowCosines,\n      columnCosines,\n      imagePositionPatient,\n      sliceThickness: getNumberValue(metaData['00180050']),\n      sliceLocation: getNumberValue(metaData['00201041']),\n      pixelSpacing,\n      rowPixelSpacing,\n      columnPixelSpacing\n    };\n  }\n\n  if (type === 'imagePixelModule') {\n    return {\n      samplesPerPixel: getNumberValue(metaData['00280002']),\n      photometricInterpretation: getValue(metaData['00280004']),\n      rows: getNumberValue(metaData['00280010']),\n      columns: getNumberValue(metaData['00280011']),\n      bitsAllocated: getNumberValue(metaData['00280100']),\n      bitsStored: getNumberValue(metaData['00280101']),\n      highBit: getValue(metaData['00280102']),\n      pixelRepresentation: getNumberValue(metaData['00280103']),\n      planarConfiguration: getNumberValue(metaData['00280006']),\n      pixelAspectRatio: getValue(metaData['00280034']),\n      redPaletteColorLookupTableDescriptor: getNumberValues(metaData['00281101']),\n      greenPaletteColorLookupTableDescriptor: getNumberValues(metaData['00281102']),\n      bluePaletteColorLookupTableDescriptor: getNumberValues(metaData['00281103']),\n      redPaletteColorLookupTableData: getNumberValues(metaData['00281201']),\n      greenPaletteColorLookupTableData: getNumberValues(metaData['00281202']),\n      bluePaletteColorLookupTableData: getNumberValues(metaData['00281203'])\n    };\n  }\n\n  if (type === 'voiLutModule') {\n    return {\n      // TODO VOT LUT Sequence\n      windowCenter: getNumberValues(metaData['00281050'], 1),\n      windowWidth: getNumberValues(metaData['00281051'], 1)\n    };\n  }\n\n  if (type === 'modalityLutModule') {\n    return {\n      // TODO VOT LUT Sequence\n      rescaleIntercept: getNumberValue(metaData['00281052']),\n      rescaleSlope: getNumberValue(metaData['00281053']),\n      rescaleType: getValue(metaData['00281054'])\n    };\n  }\n\n  if (type === 'sopCommonModule') {\n    return {\n      sopClassUID: getValue(metaData['00080016']),\n      sopInstanceUID: getValue(metaData['00080018'])\n    };\n  }\n\n  if (type === 'petIsotopeModule') {\n    const radiopharmaceuticalInfo = getValue(metaData['00540016']);\n\n    if (radiopharmaceuticalInfo === undefined) {\n      return;\n    }\n\n    return {\n      radiopharmaceuticalInfo: {\n        radiopharmaceuticalStartTime: dicomParser.parseTM(getValue(radiopharmaceuticalInfo['00181072'], 0, '')),\n        radionuclideTotalDose: getNumberValue(radiopharmaceuticalInfo['00181074']),\n        radionuclideHalfLife: getNumberValue(radiopharmaceuticalInfo['00181075'])\n      }\n    };\n  }\n\n}\n\nexport default metaDataProvider;\n","\n\nlet imageIds = [];\n\nfunction add (imageId, metadata) {\n  imageIds[imageId] = metadata;\n}\n\nfunction get (imageId) {\n  return imageIds[imageId];\n}\n\nfunction remove (imageId) {\n  imageIds[imageId] = undefined;\n}\n\nfunction purge () {\n  imageIds = [];\n}\n\nexport default {\n  add,\n  get,\n  remove,\n  purge\n};\n","import loadImage from './loadImage.js';\nimport { metaDataProvider } from './metaData/index.js';\n\nexport default function (cornerstone) {\n  // register wadors scheme and metadata provider\n  cornerstone.registerImageLoader('wadors', loadImage);\n  cornerstone.metaData.addProvider(metaDataProvider);\n}\n","import external from '../../externalModules.js';\nimport { xhrRequest } from '../internal/index.js';\n\n/**\n * This object supports loading of DICOM P10 dataset from a uri and caching it so it can be accessed\n * by the caller.  This allows a caller to access the datasets without having to go through cornerstone's\n * image loader mechanism.  One reason a caller may need to do this is to determine the number of frames\n * in a multiframe sop instance so it can create the imageId's correctly.\n */\nlet cacheSizeInBytes = 0;\n\nlet loadedDataSets = {};\nlet promises = {};\n\n// returns true if the wadouri for the specified index has been loaded\nfunction isLoaded (uri) {\n  return loadedDataSets[uri] !== undefined;\n}\n\nfunction get (uri) {\n  if (!loadedDataSets[uri]) {\n    return;\n  }\n\n  return loadedDataSets[uri].dataSet;\n}\n\n\n// loads the dicom dataset from the wadouri sp\nfunction load (uri, loadRequest = xhrRequest, imageId) {\n  const { cornerstone, dicomParser } = external;\n\n  // if already loaded return it right away\n  if (loadedDataSets[uri]) {\n    // console.log('using loaded dataset ' + uri);\n    return new Promise((resolve) => {\n      loadedDataSets[uri].cacheCount++;\n      resolve(loadedDataSets[uri].dataSet);\n    });\n  }\n\n  // if we are currently loading this uri, increment the cacheCount and return its promise\n  if (promises[uri]) {\n    // console.log('returning existing load promise for ' + uri);\n    promises[uri].cacheCount++;\n\n    return promises[uri];\n  }\n\n  // This uri is not loaded or being loaded, load it via an xhrRequest\n  const loadDICOMPromise = loadRequest(uri, imageId);\n\n  // handle success and failure of the XHR request load\n  const promise = new Promise((resolve, reject) => {\n    loadDICOMPromise.then(function (dicomPart10AsArrayBuffer/* , xhr*/) {\n      const byteArray = new Uint8Array(dicomPart10AsArrayBuffer);\n\n      // Reject the promise if parsing the dicom file fails\n      let dataSet;\n\n      try {\n        dataSet = dicomParser.parseDicom(byteArray);\n      } catch (error) {\n        return reject(error);\n      }\n\n      loadedDataSets[uri] = {\n        dataSet,\n        cacheCount: promise.cacheCount\n      };\n      cacheSizeInBytes += dataSet.byteArray.length;\n      resolve(dataSet);\n\n      cornerstone.triggerEvent(cornerstone.events, 'datasetscachechanged', {\n        uri,\n        action: 'loaded',\n        cacheInfo: getInfo()\n      });\n    }, reject).then(() => {\n      // Remove the promise if success\n      delete promises[uri];\n    }, () => {\n      // Remove the promise if failure\n      delete promises[uri];\n    });\n  });\n\n  promise.cacheCount = 1;\n\n  promises[uri] = promise;\n\n  return promise;\n}\n\n// remove the cached/loaded dicom dataset for the specified wadouri to free up memory\nfunction unload (uri) {\n  const { cornerstone } = external;\n\n  // console.log('unload for ' + uri);\n  if (loadedDataSets[uri]) {\n    loadedDataSets[uri].cacheCount--;\n    if (loadedDataSets[uri].cacheCount === 0) {\n      // console.log('removing loaded dataset for ' + uri);\n      cacheSizeInBytes -= loadedDataSets[uri].dataSet.byteArray.length;\n      delete loadedDataSets[uri];\n\n      cornerstone.triggerEvent(cornerstone.events, 'datasetscachechanged', {\n        uri,\n        action: 'unloaded',\n        cacheInfo: getInfo()\n      });\n    }\n  }\n}\n\nexport function getInfo () {\n  return {\n    cacheSizeInBytes,\n    numberOfDataSetsCached: Object.keys(loadedDataSets).length\n  };\n}\n\n// removes all cached datasets from memory\nfunction purge () {\n  loadedDataSets = {};\n  promises = {};\n}\n\nexport default {\n  isLoaded,\n  load,\n  unload,\n  getInfo,\n  purge,\n  get\n};\n","let files = [];\n\nfunction add (file) {\n  const fileIndex = files.push(file);\n\n  return `dicomfile:${fileIndex - 1}`;\n}\n\nfunction get (index) {\n  return files[index];\n}\n\nfunction remove (index) {\n  files[index] = undefined;\n}\n\nfunction purge () {\n  files = [];\n}\n\nexport default {\n  add,\n  get,\n  remove,\n  purge\n};\n","import external from '../../externalModules.js';\n\n/**\n * Function to deal with extracting an image frame from an encapsulated data set.\n */\n\n\nfunction framesAreFragmented (dataSet) {\n  const numberOfFrames = dataSet.intString('x00280008');\n  const pixelDataElement = dataSet.elements.x7fe00010;\n\n  return (numberOfFrames !== pixelDataElement.fragments.length);\n}\n\nexport default function getEncapsulatedImageFrame (dataSet, frameIndex) {\n  const { dicomParser } = external;\n\n  if (dataSet.elements.x7fe00010 && dataSet.elements.x7fe00010.basicOffsetTable.length) {\n    // Basic Offset Table is not empty\n    return dicomParser.readEncapsulatedImageFrame(dataSet, dataSet.elements.x7fe00010, frameIndex);\n  }\n\n  // Empty basic offset table\n\n  if (framesAreFragmented(dataSet)) {\n    const basicOffsetTable = dicomParser.createJPEGBasicOffsetTable(dataSet, dataSet.elements.x7fe00010);\n\n    return dicomParser.readEncapsulatedImageFrame(dataSet, dataSet.elements.x7fe00010, frameIndex, basicOffsetTable);\n  }\n\n  return dicomParser.readEncapsulatedPixelDataFromFragments(dataSet, dataSet.elements.x7fe00010, frameIndex);\n}\n","import getEncapsulatedImageFrame from './getEncapsulatedImageFrame.js';\nimport getUncompressedImageFrame from './getUncompressedImageFrame.js';\n\nfunction getPixelData (dataSet, frameIndex = 0) {\n  const pixelDataElement = dataSet.elements.x7fe00010 || dataSet.elements.x7fe00008;\n\n  if (!pixelDataElement) {\n    return null;\n  }\n\n  if (pixelDataElement.encapsulatedPixelData) {\n    return getEncapsulatedImageFrame(dataSet, frameIndex);\n  }\n\n  return getUncompressedImageFrame(dataSet, frameIndex);\n}\n\nexport default getPixelData;\n","import unpackBinaryFrame from './unpackBinaryFrame.js';\n\n/**\n * Function to deal with extracting an image frame from an encapsulated data set.\n */\n\nfunction getUncompressedImageFrame (dataSet, frameIndex) {\n  const pixelDataElement = dataSet.elements.x7fe00010 || dataSet.elements.x7fe00008;\n  const bitsAllocated = dataSet.uint16('x00280100');\n  const rows = dataSet.uint16('x00280010');\n  const columns = dataSet.uint16('x00280011');\n  const samplesPerPixel = dataSet.uint16('x00280002');\n\n  const pixelDataOffset = pixelDataElement.dataOffset;\n  const pixelsPerFrame = rows * columns * samplesPerPixel;\n\n  let frameOffset;\n\n  if (bitsAllocated === 8) {\n    frameOffset = pixelDataOffset + frameIndex * pixelsPerFrame;\n    if (frameOffset >= dataSet.byteArray.length) {\n      throw new Error('frame exceeds size of pixelData');\n    }\n\n    return new Uint8Array(dataSet.byteArray.buffer, frameOffset, pixelsPerFrame);\n  } else if (bitsAllocated === 16) {\n    frameOffset = pixelDataOffset + frameIndex * pixelsPerFrame * 2;\n    if (frameOffset >= dataSet.byteArray.length) {\n      throw new Error('frame exceeds size of pixelData');\n    }\n\n    return new Uint8Array(dataSet.byteArray.buffer, frameOffset, pixelsPerFrame * 2);\n  } else if (bitsAllocated === 1) {\n    frameOffset = pixelDataOffset + frameIndex * pixelsPerFrame * 0.125;\n    if (frameOffset >= dataSet.byteArray.length) {\n      throw new Error('frame exceeds size of pixelData');\n    }\n\n    return unpackBinaryFrame(dataSet.byteArray, frameOffset, pixelsPerFrame);\n  } else if (bitsAllocated === 32) {\n    frameOffset = pixelDataOffset + frameIndex * pixelsPerFrame * 4;\n    if (frameOffset >= dataSet.byteArray.length) {\n      throw new Error('frame exceeds size of pixelData');\n    }\n\n    return new Uint8Array(dataSet.byteArray.buffer, frameOffset, pixelsPerFrame * 4);\n  }\n\n  throw new Error('unsupported pixel format');\n}\n\nexport default getUncompressedImageFrame;\n","import { getImagePixelModule,\n  getLUTs,\n  getModalityLUTOutputPixelRepresentation,\n  getNumberValues,\n  metaDataProvider } from './metaData/index.js';\n\nimport dataSetCacheManager from './dataSetCacheManager.js';\nimport fileManager from './fileManager.js';\nimport getEncapsulatedImageFrame from './getEncapsulatedImageFrame.js';\nimport getUncompressedImageFrame from './getUncompressedImageFrame.js';\nimport loadFileRequest from './loadFileRequest.js';\nimport { loadImageFromPromise,\n  getLoaderForScheme,\n  loadImage } from './loadImage.js';\nimport parseImageId from './parseImageId.js';\nimport unpackBinaryFrame from './unpackBinaryFrame.js';\nimport register from './register.js';\n\nconst metaData = {\n  getImagePixelModule,\n  getLUTs,\n  getModalityLUTOutputPixelRepresentation,\n  getNumberValues,\n  metaDataProvider\n};\n\nexport default {\n  metaData,\n  dataSetCacheManager,\n  fileManager,\n  getEncapsulatedImageFrame,\n  getUncompressedImageFrame,\n  loadFileRequest,\n  loadImageFromPromise,\n  getLoaderForScheme,\n  loadImage,\n  parseImageId,\n  unpackBinaryFrame,\n  register\n};\n","import parseImageId from './parseImageId.js';\nimport fileManager from './fileManager.js';\n\nfunction loadFileRequest (uri) {\n  const parsedImageId = parseImageId(uri);\n  const fileIndex = parseInt(parsedImageId.url, 10);\n  const file = fileManager.get(fileIndex);\n\n  return new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n\n    fileReader.onload = (e) => {\n      const dicomPart10AsArrayBuffer = e.target.result;\n\n      resolve(dicomPart10AsArrayBuffer);\n    };\n\n    fileReader.onerror = reject;\n\n    fileReader.readAsArrayBuffer(file);\n  });\n}\n\nexport default loadFileRequest;\n","import createImage from '../createImage.js';\nimport parseImageId from './parseImageId.js';\nimport dataSetCacheManager from './dataSetCacheManager.js';\nimport loadFileRequest from './loadFileRequest.js';\nimport getPixelData from './getPixelData.js';\nimport { xhrRequest } from '../internal/index.js';\n\n// add a decache callback function to clear out our dataSetCacheManager\nfunction addDecache (imageLoadObject, imageId) {\n  imageLoadObject.decache = function () {\n    // console.log('decache');\n    const parsedImageId = parseImageId(imageId);\n\n    dataSetCacheManager.unload(parsedImageId.url);\n  };\n}\n\nfunction loadImageFromPromise (dataSetPromise, imageId, frame = 0, sharedCacheKey, options, callbacks) {\n  const start = new Date().getTime();\n  const imageLoadObject = {\n    cancelFn: undefined\n  };\n\n  imageLoadObject.promise = new Promise((resolve, reject) => {\n    dataSetPromise.then((dataSet/* , xhr*/) => {\n      const pixelData = getPixelData(dataSet, frame);\n      const transferSyntax = dataSet.string('x00020010');\n      const loadEnd = new Date().getTime();\n      const imagePromise = createImage(imageId, pixelData, transferSyntax, options);\n\n      addDecache(imageLoadObject, imageId);\n\n      imagePromise.then((image) => {\n        image.data = dataSet;\n        image.sharedCacheKey = sharedCacheKey;\n        const end = new Date().getTime();\n\n        image.loadTimeInMS = loadEnd - start;\n        image.totalTimeInMS = end - start;\n        if (callbacks !== undefined && callbacks.imageDoneCallback !== undefined) {\n          callbacks.imageDoneCallback(image);\n        }\n        resolve(image);\n      }, function (error) {\n        // Reject the error, and the dataSet\n        reject({\n          error,\n          dataSet\n        });\n      });\n    }, function (error) {\n      // Reject the error\n      reject({\n        error\n      });\n    });\n  });\n\n  return imageLoadObject;\n}\n\nfunction loadImageFromDataSet (dataSet, imageId, frame = 0, sharedCacheKey, options) {\n  const start = new Date().getTime();\n\n  const promise = new Promise((resolve, reject) => {\n    const loadEnd = new Date().getTime();\n    let imagePromise;\n\n    try {\n      const pixelData = getPixelData(dataSet, frame);\n      const transferSyntax = dataSet.string('x00020010');\n\n      imagePromise = createImage(imageId, pixelData, transferSyntax, options);\n    } catch (error) {\n      // Reject the error, and the dataSet\n      reject({\n        error,\n        dataSet\n      });\n\n      return;\n    }\n\n    imagePromise.then((image) => {\n      image.data = dataSet;\n      image.sharedCacheKey = sharedCacheKey;\n      const end = new Date().getTime();\n\n      image.loadTimeInMS = loadEnd - start;\n      image.totalTimeInMS = end - start;\n      resolve(image);\n    }, reject);\n  });\n\n  return {\n    promise,\n    cancelFn: undefined\n  };\n}\n\nfunction getLoaderForScheme (scheme) {\n  if (scheme === 'dicomweb' || scheme === 'wadouri') {\n    return xhrRequest;\n  } else if (scheme === 'dicomfile') {\n    return loadFileRequest;\n  }\n}\n\nfunction loadImage (imageId, options = {}) {\n  const parsedImageId = parseImageId(imageId);\n  let loader = options.loader;\n\n  if (loader === undefined) {\n    loader = getLoaderForScheme(parsedImageId.scheme);\n  }\n\n  // if the dataset for this url is already loaded, use it\n  if (dataSetCacheManager.isLoaded(parsedImageId.url)) {\n    const dataSet = dataSetCacheManager.get(parsedImageId.url, loader, imageId);\n\n    return loadImageFromDataSet(dataSet, imageId, parsedImageId.frame, parsedImageId.url, options);\n  }\n\n  // load the dataSet via the dataSetCacheManager\n  const dataSetPromise = dataSetCacheManager.load(parsedImageId.url, loader, imageId);\n\n  return loadImageFromPromise(dataSetPromise, imageId, parsedImageId.frame, parsedImageId.url, options);\n}\n\nexport { loadImageFromPromise, getLoaderForScheme, loadImage };\n","function getLutDescriptor (dataSet, tag) {\n  if (!dataSet.elements[tag] || dataSet.elements[tag].length !== 6) {\n    return;\n  }\n\n  return [dataSet.uint16(tag, 0), dataSet.uint16(tag, 1), dataSet.uint16(tag, 2)];\n}\n\nfunction getLutData (lutDataSet, tag, lutDescriptor) {\n  const lut = [];\n  const lutData = lutDataSet.elements[tag];\n\n  for (let i = 0; i < lutDescriptor[0]; i++) {\n    // Output range is always unsigned\n    if (lutDescriptor[2] === 16) {\n      lut[i] = lutDataSet.uint16(tag, i);\n    } else {\n      lut[i] = lutDataSet.byteArray[i + lutData.dataOffset];\n    }\n  }\n\n  return lut;\n}\n\nfunction populatePaletteColorLut (dataSet, imagePixelModule) {\n  imagePixelModule.redPaletteColorLookupTableDescriptor = getLutDescriptor(dataSet, 'x00281101');\n  imagePixelModule.greenPaletteColorLookupTableDescriptor = getLutDescriptor(dataSet, 'x00281102');\n  imagePixelModule.bluePaletteColorLookupTableDescriptor = getLutDescriptor(dataSet, 'x00281103');\n\n  // The first Palette Color Lookup Table Descriptor value is the number of entries in the lookup table.\n  // When the number of table entries is equal to 2ˆ16 then this value shall be 0.\n  // See http://dicom.nema.org/MEDICAL/DICOM/current/output/chtml/part03/sect_C.7.6.3.html#sect_C.7.6.3.1.5\n  if (imagePixelModule.redPaletteColorLookupTableDescriptor[0] === 0) {\n    imagePixelModule.redPaletteColorLookupTableDescriptor[0] = 65536;\n    imagePixelModule.greenPaletteColorLookupTableDescriptor[0] = 65536;\n    imagePixelModule.bluePaletteColorLookupTableDescriptor[0] = 65536;\n  }\n\n  // The third Palette Color Lookup Table Descriptor value specifies the number of bits for each entry in the Lookup Table Data.\n  // It shall take the value of 8 or 16.\n  // The LUT Data shall be stored in a format equivalent to 8 bits allocated when the number of bits for each entry is 8, and 16 bits allocated when the number of bits for each entry is 16, where in both cases the high bit is equal to bits allocated-1.\n  // The third value shall be identical for each of the Red, Green and Blue Palette Color Lookup Table Descriptors.\n  //\n  // Note: Some implementations have encoded 8 bit entries with 16 bits allocated, padding the high bits;\n  // this can be detected by comparing the number of entries specified in the LUT Descriptor with the actual value length of the LUT Data entry.\n  // The value length in bytes should equal the number of entries if bits allocated is 8, and be twice as long if bits allocated is 16.\n  const numLutEntries = imagePixelModule.redPaletteColorLookupTableDescriptor[0];\n  const lutData = dataSet.elements.x00281201;\n  const lutBitsAllocated = lutData.length === numLutEntries ? 8 : 16;\n\n  // If the descriptors do not appear to have the correct values, correct them\n  if (imagePixelModule.redPaletteColorLookupTableDescriptor[2] !== lutBitsAllocated) {\n    imagePixelModule.redPaletteColorLookupTableDescriptor[2] = lutBitsAllocated;\n    imagePixelModule.greenPaletteColorLookupTableDescriptor[2] = lutBitsAllocated;\n    imagePixelModule.bluePaletteColorLookupTableDescriptor[2] = lutBitsAllocated;\n  }\n\n  imagePixelModule.redPaletteColorLookupTableData = getLutData(dataSet, 'x00281201', imagePixelModule.redPaletteColorLookupTableDescriptor);\n  imagePixelModule.greenPaletteColorLookupTableData = getLutData(dataSet, 'x00281202', imagePixelModule.greenPaletteColorLookupTableDescriptor);\n  imagePixelModule.bluePaletteColorLookupTableData = getLutData(dataSet, 'x00281203', imagePixelModule.bluePaletteColorLookupTableDescriptor);\n}\n\nfunction populateSmallestLargestPixelValues (dataSet, imagePixelModule) {\n  const pixelRepresentation = dataSet.uint16('x00280103');\n\n  if (pixelRepresentation === 0) {\n    imagePixelModule.smallestPixelValue = dataSet.uint16('x00280106');\n    imagePixelModule.largestPixelValue = dataSet.uint16('x00280107');\n  } else {\n    imagePixelModule.smallestPixelValue = dataSet.int16('x00280106');\n    imagePixelModule.largestPixelValue = dataSet.int16('x00280107');\n  }\n}\n\nfunction getImagePixelModule (dataSet) {\n  const imagePixelModule = {\n    samplesPerPixel: dataSet.uint16('x00280002'),\n    photometricInterpretation: dataSet.string('x00280004'),\n    rows: dataSet.uint16('x00280010'),\n    columns: dataSet.uint16('x00280011'),\n    bitsAllocated: dataSet.uint16('x00280100'),\n    bitsStored: dataSet.uint16('x00280101'),\n    highBit: dataSet.uint16('x00280102'),\n    pixelRepresentation: dataSet.uint16('x00280103'),\n    planarConfiguration: dataSet.uint16('x00280006'),\n    pixelAspectRatio: dataSet.string('x00280034')\n  };\n\n  populateSmallestLargestPixelValues(dataSet, imagePixelModule);\n\n  if (imagePixelModule.photometricInterpretation === 'PALETTE COLOR' && dataSet.elements.x00281101) {\n    populatePaletteColorLut(dataSet, imagePixelModule);\n  }\n\n  return imagePixelModule;\n}\n\nexport default getImagePixelModule;\n","function getLUT (pixelRepresentation, lutDataSet) {\n  let numLUTEntries = lutDataSet.uint16('x00283002', 0);\n\n  if (numLUTEntries === 0) {\n    numLUTEntries = 65535;\n  }\n  let firstValueMapped = 0;\n\n  if (pixelRepresentation === 0) {\n    firstValueMapped = lutDataSet.uint16('x00283002', 1);\n  } else {\n    firstValueMapped = lutDataSet.int16('x00283002', 1);\n  }\n  const numBitsPerEntry = lutDataSet.uint16('x00283002', 2);\n  // console.log('LUT(', numLUTEntries, ',', firstValueMapped, ',', numBitsPerEntry, ')');\n  const lut = {\n    id: '1',\n    firstValueMapped,\n    numBitsPerEntry,\n    lut: []\n  };\n\n  // console.log(\"minValue=\", minValue, \"; maxValue=\", maxValue);\n  for (let i = 0; i < numLUTEntries; i++) {\n    if (pixelRepresentation === 0) {\n      lut.lut[i] = lutDataSet.uint16('x00283006', i);\n    } else {\n      lut.lut[i] = lutDataSet.int16('x00283006', i);\n    }\n  }\n\n  return lut;\n}\n\n\nfunction getLUTs (pixelRepresentation, lutSequence) {\n  if (!lutSequence || !lutSequence.items.length) {\n    return;\n  }\n  const luts = [];\n\n  for (let i = 0; i < lutSequence.items.length; i++) {\n    const lutDataSet = lutSequence.items[i].dataSet;\n    const lut = getLUT(pixelRepresentation, lutDataSet);\n\n    if (lut) {\n      luts.push(lut);\n    }\n  }\n\n  return luts;\n}\n\nexport default getLUTs;\n","/* eslint no-bitwise: 0 */\n\nfunction getMinStoredPixelValue (dataSet) {\n  const pixelRepresentation = dataSet.uint16('x00280103');\n  const bitsStored = dataSet.uint16('x00280101');\n\n  if (pixelRepresentation === 0) {\n    return 0;\n  }\n\n  return -1 << (bitsStored - 1);\n}\n\n// 0 = unsigned / US, 1 = signed / SS\nfunction getModalityLUTOutputPixelRepresentation (dataSet) {\n\n  // CT SOP Classes are always signed\n  const sopClassUID = dataSet.string('x00080016');\n\n  if (sopClassUID === '1.2.840.10008.5.1.4.1.1.2' ||\n    sopClassUID === '1.2.840.10008.5.1.4.1.1.2.1') {\n    return 1;\n  }\n\n  // if rescale intercept and rescale slope are present, pass the minimum stored\n  // pixel value through them to see if we get a signed output range\n  const rescaleIntercept = dataSet.floatString('x00281052');\n  const rescaleSlope = dataSet.floatString('x00281053');\n\n  if (rescaleIntercept !== undefined && rescaleSlope !== undefined) {\n    const minStoredPixelValue = getMinStoredPixelValue(dataSet); //\n    const minModalityLutValue = minStoredPixelValue * rescaleSlope + rescaleIntercept;\n\n    if (minModalityLutValue < 0) {\n      return 1;\n    }\n\n    return 0;\n\n  }\n\n  // Output of non linear modality lut is always unsigned\n  if (dataSet.elements.x00283000 && dataSet.elements.x00283000.length > 0) {\n    return 0;\n  }\n\n  // If no modality lut transform, output is same as pixel representation\n  return dataSet.uint16('x00280103');\n}\n\nexport default getModalityLUTOutputPixelRepresentation;\n","function getNumberValues (dataSet, tag, minimumLength) {\n  const values = [];\n  const valueAsString = dataSet.string(tag);\n\n  if (!valueAsString) {\n    return;\n  }\n  const split = valueAsString.split('\\\\');\n\n  if (minimumLength && split.length < minimumLength) {\n    return;\n  }\n  for (let i = 0; i < split.length; i++) {\n    values.push(parseFloat(split[i]));\n  }\n\n  return values;\n}\n\nexport default getNumberValues;\n","export { default as getImagePixelModule } from './getImagePixelModule.js';\nexport { default as getLUTs } from './getLUTs.js';\nexport { default as getModalityLUTOutputPixelRepresentation } from './getModalityLUTOutputPixelRepresentation.js';\nexport { default as getNumberValues } from './getNumberValues.js';\nexport { default as metaDataProvider } from './metaDataProvider.js';\n","import external from '../../../externalModules.js';\nimport getNumberValues from './getNumberValues.js';\nimport parseImageId from '../parseImageId.js';\nimport dataSetCacheManager from '../dataSetCacheManager.js';\nimport getImagePixelModule from './getImagePixelModule.js';\nimport getLUTs from './getLUTs.js';\nimport getModalityLUTOutputPixelRepresentation from './getModalityLUTOutputPixelRepresentation.js';\n\nfunction metaDataProvider (type, imageId) {\n  const { dicomParser } = external;\n  const parsedImageId = parseImageId(imageId);\n\n  const dataSet = dataSetCacheManager.get(parsedImageId.url);\n\n  if (!dataSet) {\n    return;\n  }\n\n  if (type === 'generalSeriesModule') {\n    return {\n      modality: dataSet.string('x00080060'),\n      seriesInstanceUID: dataSet.string('x0020000e'),\n      seriesNumber: dataSet.intString('x00200011'),\n      studyInstanceUID: dataSet.string('x0020000d'),\n      seriesDate: dicomParser.parseDA(dataSet.string('x00080021')),\n      seriesTime: dicomParser.parseTM(dataSet.string('x00080031') || '')\n    };\n  }\n\n  if (type === 'patientStudyModule') {\n    return {\n      patientAge: dataSet.intString('x00101010'),\n      patientSize: dataSet.floatString('x00101020'),\n      patientWeight: dataSet.floatString('x00101030')\n    };\n  }\n\n  if (type === 'imagePlaneModule') {\n\n    const imageOrientationPatient = getNumberValues(dataSet, 'x00200037', 6);\n    const imagePositionPatient = getNumberValues(dataSet, 'x00200032', 3);\n    const pixelSpacing = getNumberValues(dataSet, 'x00280030', 2);\n\n    let columnPixelSpacing = 1.0;\n    let rowPixelSpacing = 1.0;\n\n    if (pixelSpacing) {\n      rowPixelSpacing = pixelSpacing[0];\n      columnPixelSpacing = pixelSpacing[1];\n    }\n\n    let rowCosines = null;\n    let columnCosines = null;\n\n    if (imageOrientationPatient) {\n      rowCosines = [parseFloat(imageOrientationPatient[0]), parseFloat(imageOrientationPatient[1]), parseFloat(imageOrientationPatient[2])];\n      columnCosines = [parseFloat(imageOrientationPatient[3]), parseFloat(imageOrientationPatient[4]), parseFloat(imageOrientationPatient[5])];\n    }\n\n    return {\n      frameOfReferenceUID: dataSet.string('x00200052'),\n      rows: dataSet.uint16('x00280010'),\n      columns: dataSet.uint16('x00280011'),\n      imageOrientationPatient,\n      rowCosines,\n      columnCosines,\n      imagePositionPatient,\n      sliceThickness: dataSet.floatString('x00180050'),\n      sliceLocation: dataSet.floatString('x00201041'),\n      pixelSpacing,\n      rowPixelSpacing,\n      columnPixelSpacing\n    };\n  }\n\n  if (type === 'imagePixelModule') {\n    return getImagePixelModule(dataSet);\n  }\n\n  if (type === 'modalityLutModule') {\n    return {\n      rescaleIntercept: dataSet.floatString('x00281052'),\n      rescaleSlope: dataSet.floatString('x00281053'),\n      rescaleType: dataSet.string('x00281054'),\n      modalityLUTSequence: getLUTs(dataSet.uint16('x00280103'), dataSet.elements.x00283000)\n    };\n  }\n\n  if (type === 'voiLutModule') {\n    const modalityLUTOutputPixelRepresentation = getModalityLUTOutputPixelRepresentation(dataSet);\n\n\n    return {\n      windowCenter: getNumberValues(dataSet, 'x00281050', 1),\n      windowWidth: getNumberValues(dataSet, 'x00281051', 1),\n      voiLUTSequence: getLUTs(modalityLUTOutputPixelRepresentation, dataSet.elements.x00283010)\n    };\n  }\n\n  if (type === 'sopCommonModule') {\n    return {\n      sopClassUID: dataSet.string('x00080016'),\n      sopInstanceUID: dataSet.string('x00080018')\n    };\n  }\n\n  if (type === 'petIsotopeModule') {\n    const radiopharmaceuticalInfo = dataSet.elements.x00540016;\n\n    if (radiopharmaceuticalInfo === undefined) {\n      return;\n    }\n\n    const firstRadiopharmaceuticalInfoDataSet = radiopharmaceuticalInfo.items[0].dataSet;\n\n\n    return {\n      radiopharmaceuticalInfo: {\n        radiopharmaceuticalStartTime: dicomParser.parseTM(firstRadiopharmaceuticalInfoDataSet.string('x00181072') || ''),\n        radionuclideTotalDose: firstRadiopharmaceuticalInfoDataSet.floatString('x00181074'),\n        radionuclideHalfLife: firstRadiopharmaceuticalInfoDataSet.floatString('x00181075')\n      }\n    };\n  }\n}\n\nexport default metaDataProvider;\n","function parseImageId (imageId) {\n  // build a url by parsing out the url scheme and frame index from the imageId\n  const firstColonIndex = imageId.indexOf(':');\n  let url = imageId.substring(firstColonIndex + 1);\n  const frameIndex = url.indexOf('frame=');\n  let frame;\n\n  if (frameIndex !== -1) {\n    const frameStr = url.substr(frameIndex + 6);\n\n    frame = parseInt(frameStr, 10);\n    url = url.substr(0, frameIndex - 1);\n  }\n\n  return {\n    scheme: imageId.substr(0, firstColonIndex),\n    url,\n    frame\n  };\n}\n\nexport default parseImageId;\n","import { loadImage } from './loadImage.js';\nimport { metaDataProvider } from './metaData/index.js';\n\nexport default function (cornerstone) {\n  // register dicomweb and wadouri image loader prefixes\n  cornerstone.registerImageLoader('dicomweb', loadImage);\n  cornerstone.registerImageLoader('wadouri', loadImage);\n  cornerstone.registerImageLoader('dicomfile', loadImage);\n\n  // add wadouri metadata provider\n  cornerstone.metaData.addProvider(metaDataProvider);\n}\n","/* eslint no-bitwise: 0 */\n\nfunction isBitSet (byte, bitPos) {\n  return byte & (1 << bitPos);\n}\n\n/**\n * Function to deal with unpacking a binary frame\n */\nfunction unpackBinaryFrame (byteArray, frameOffset, pixelsPerFrame) {\n  // Create a new pixel array given the image size\n  const pixelData = new Uint8Array(pixelsPerFrame);\n\n  for (let i = 0; i < pixelsPerFrame; i++) {\n    // Compute byte position\n    const bytePos = Math.floor(i / 8);\n\n    // Get the current byte\n    const byte = byteArray[bytePos + frameOffset];\n\n    // Bit position (0-7) within byte\n    const bitPos = (i % 8);\n\n    // Check whether bit at bitpos is set\n    pixelData[i] = isBitSet(byte, bitPos) ? 1 : 0;\n  }\n\n  return pixelData;\n}\n\nexport default unpackBinaryFrame;\n","import { getOptions } from './internal/options.js';\n\n// the taskId to assign to the next task added via addTask()\nlet nextTaskId = 0;\n\n// array of queued tasks sorted with highest priority task first\nconst tasks = [];\n\n// array of web workers to dispatch decode tasks to\nconst webWorkers = [];\n\n// The options for CornerstoneWADOImageLoader\nconst options = getOptions();\n\nconst defaultConfig = {\n  maxWebWorkers: navigator.hardwareConcurrency || 1,\n  startWebWorkersOnDemand: true,\n  webWorkerPath: '../../dist/cornerstoneWADOImageLoaderWebWorker.js',\n  webWorkerTaskPaths: [],\n  taskConfiguration: {\n    decodeTask: {\n      loadCodecsOnStartup: true,\n      initializeCodecsOnStartup: false,\n      codecsPath: '../dist/cornerstoneWADOImageLoaderCodecs.js',\n      usePDFJS: false,\n      strict: options.strict\n    }\n  }\n};\n\nlet config;\n\nconst statistics = {\n  maxWebWorkers: 0,\n  numWebWorkers: 0,\n  numTasksQueued: 0,\n  numTasksExecuting: 0,\n  numTasksCompleted: 0,\n  totalTaskTimeInMS: 0,\n  totalTimeDelayedInMS: 0\n};\n\n/**\n * Function to start a task on a web worker\n */\nfunction startTaskOnWebWorker () {\n  // return immediately if no decode tasks to do\n  if (!tasks.length) {\n    return;\n  }\n\n  // look for a web worker that is ready\n  for (let i = 0; i < webWorkers.length; i++) {\n    if (webWorkers[i].status === 'ready') {\n      // mark it as busy so tasks are not assigned to it\n      webWorkers[i].status = 'busy';\n\n      // get the highest priority task\n      const task = tasks.shift();\n\n      task.start = new Date().getTime();\n\n      // update stats with how long this task was delayed (waiting in queue)\n      const end = new Date().getTime();\n\n      statistics.totalTimeDelayedInMS += end - task.added;\n\n      // assign this task to this web worker and send the web worker\n      // a message to execute it\n      webWorkers[i].task = task;\n      webWorkers[i].worker.postMessage({\n        taskType: task.taskType,\n        workerIndex: i,\n        data: task.data\n      }, task.transferList);\n      statistics.numTasksExecuting++;\n\n      return;\n    }\n  }\n\n  // if no available web workers and we haven't started max web workers, start a new one\n  if (webWorkers.length < config.maxWebWorkers) {\n    spawnWebWorker();\n  }\n}\n\n/**\n * Function to handle a message from a web worker\n * @param msg\n */\nfunction handleMessageFromWorker (msg) {\n  // console.log('handleMessageFromWorker', msg.data);\n  if (msg.data.taskType === 'initialize') {\n    webWorkers[msg.data.workerIndex].status = 'ready';\n    startTaskOnWebWorker();\n  } else {\n    const start = webWorkers[msg.data.workerIndex].task.start;\n\n    webWorkers[msg.data.workerIndex].task.deferred.resolve(msg.data.result);\n    webWorkers[msg.data.workerIndex].task = undefined;\n\n    statistics.numTasksExecuting--;\n    webWorkers[msg.data.workerIndex].status = 'ready';\n    statistics.numTasksCompleted++;\n\n    const end = new Date().getTime();\n\n    statistics.totalTaskTimeInMS += end - start;\n\n    startTaskOnWebWorker();\n  }\n}\n\n/**\n * Spawns a new web worker\n */\nfunction spawnWebWorker () {\n  // prevent exceeding maxWebWorkers\n  if (webWorkers.length >= config.maxWebWorkers) {\n    return;\n  }\n\n  // spawn the webworker\n  const worker = new Worker(config.webWorkerPath);\n\n  webWorkers.push({\n    worker,\n    status: 'initializing'\n  });\n  worker.addEventListener('message', handleMessageFromWorker);\n  worker.postMessage({\n    taskType: 'initialize',\n    workerIndex: webWorkers.length - 1,\n    config\n  });\n}\n\n/**\n * Initialization function for the web worker manager - spawns web workers\n * @param configObject\n */\nfunction initialize (configObject) {\n  configObject = configObject || defaultConfig;\n\n  // prevent being initialized more than once\n  if (config) {\n    throw new Error('WebWorkerManager already initialized');\n  }\n\n  config = configObject;\n\n  config.maxWebWorkers = config.maxWebWorkers || (navigator.hardwareConcurrency || 1);\n\n  // Spawn new web workers\n  if (!config.startWebWorkersOnDemand) {\n    for (let i = 0; i < config.maxWebWorkers; i++) {\n      spawnWebWorker();\n    }\n  }\n}\n\n/**\n * dynamically loads a web worker task\n * @param sourcePath\n * @param taskConfig\n */\nfunction loadWebWorkerTask (sourcePath, taskConfig) {\n  // add it to the list of web worker tasks paths so on demand web workers\n  // load this properly\n  config.webWorkerTaskPaths.push(sourcePath);\n\n  // if a task specific configuration is provided, merge it into the config\n  if (taskConfig) {\n    config.taskConfiguration = Object.assign(config.taskConfiguration, taskConfig);\n  }\n\n  // tell each spawned web worker to load this task\n  for (let i = 0; i < webWorkers.length; i++) {\n    webWorkers[i].worker.postMessage({\n      taskType: 'loadWebWorkerTask',\n      workerIndex: webWorkers.length - 1,\n      sourcePath,\n      config\n    });\n  }\n}\n\n/**\n * Function to add a decode task to be performed\n *\n * @param taskType - the taskType for this task\n * @param data - data specific to the task\n * @param priority - optional priority of the task (defaults to 0), > 0 is higher, < 0 is lower\n * @param transferList - optional array of data to transfer to web worker\n * @returns {*}\n */\nfunction addTask (taskType, data, priority = 0, transferList) {\n  if (!config) {\n    initialize();\n  }\n\n  let deferred = {};\n  const promise = new Promise((resolve, reject) => {\n    deferred = {\n      resolve,\n      reject\n    };\n  });\n\n  // find the right spot to insert this decode task (based on priority)\n  let i;\n\n  for (i = 0; i < tasks.length; i++) {\n    if (tasks[i].priority < priority) {\n      break;\n    }\n  }\n\n  const taskId = nextTaskId++;\n\n  // insert the decode task at position i\n  tasks.splice(i, 0, {\n    taskId,\n    taskType,\n    status: 'ready',\n    added: new Date().getTime(),\n    data,\n    deferred,\n    priority,\n    transferList\n  });\n\n  // try to start a task on the web worker since we just added a new task and a web worker may be available\n  startTaskOnWebWorker();\n\n  return {\n    taskId,\n    promise\n  };\n}\n\n/**\n * Changes the priority of a queued task\n * @param taskId - the taskId to change the priority of\n * @param priority - priority of the task (defaults to 0), > 0 is higher, < 0 is lower\n * @returns boolean - true on success, false if taskId not found\n */\nfunction setTaskPriority (taskId, priority = 0) {\n  // search for this taskId\n  for (let i = 0; i < tasks.length; i++) {\n    if (tasks[i].taskId === taskId) {\n      // taskId found, remove it\n      const task = tasks.splice(i, 1)[0];\n\n      // set its priority\n      task.priority = priority;\n\n      // find the right spot to insert this decode task (based on priority)\n      for (i = 0; i < tasks.length; i++) {\n        if (tasks[i].priority < priority) {\n          break;\n        }\n      }\n\n      // insert the decode task at position i\n      tasks.splice(i, 0, task);\n\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Cancels a queued task and rejects\n * @param taskId - the taskId to cancel\n * @param reason - optional reason the task was rejected\n * @returns boolean - true on success, false if taskId not found\n */\nfunction cancelTask (taskId, reason) {\n  // search for this taskId\n  for (let i = 0; i < tasks.length; i++) {\n    if (tasks[i].taskId === taskId) {\n      // taskId found, remove it\n      const task = tasks.splice(i, 1);\n\n      task.deferred.reject(reason);\n\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Function to return the statistics on running web workers\n * @returns object containing statistics\n */\nfunction getStatistics () {\n  statistics.maxWebWorkers = config.maxWebWorkers;\n  statistics.numWebWorkers = webWorkers.length;\n  statistics.numTasksQueued = tasks.length;\n\n  return statistics;\n}\n\nexport default {\n  initialize,\n  loadWebWorkerTask,\n  addTask,\n  getStatistics,\n  setTaskPriority,\n  cancelTask\n};\n","import getMinMax from './getMinMax.js';\n\n/**\n * Check the minimum and maximum values in the imageFrame pixel data\n * match with the provided smallestPixelValue and largestPixelValue metaData.\n *\n * If 'strict' is true, log to the console a warning if these values do not match.\n * Otherwise, correct them automatically.\n *\n * @param {Object} imageFrame\n * @param {Boolean} strict If 'strict' is true, log to the console a warning if these values do not match.\n * Otherwise, correct them automatically.Default is true.\n */\nexport default function calculateMinMax (imageFrame, strict = true) {\n  const minMax = getMinMax(imageFrame.pixelData);\n  const mustAssign = !(isNumber(imageFrame.smallestPixelValue) && isNumber(imageFrame.largestPixelValue));\n\n\n  if (strict === true && !mustAssign) {\n    if (imageFrame.smallestPixelValue !== minMax.min) {\n      console.warn('Image smallestPixelValue tag is incorrect. Rendering performance will suffer considerably.');\n    }\n\n    if (imageFrame.largestPixelValue !== minMax.max) {\n      console.warn('Image largestPixelValue tag is incorrect. Rendering performance will suffer considerably.');\n    }\n  } else {\n    imageFrame.smallestPixelValue = minMax.min;\n    imageFrame.largestPixelValue = minMax.max;\n  }\n}\n\nfunction isNumber (numValue) {\n  return typeof numValue === 'number';\n}\n","import decodeLittleEndian from './decoders/decodeLittleEndian.js';\nimport decodeBigEndian from './decoders/decodeBigEndian.js';\nimport decodeRLE from './decoders/decodeRLE.js';\nimport decodeJPEGBaseline from './decoders/decodeJPEGBaseline.js';\nimport decodeJPEGLossless from './decoders/decodeJPEGLossless.js';\nimport decodeJPEGLS from './decoders/decodeJPEGLS.js';\nimport decodeJPEG2000 from './decoders/decodeJPEG2000.js';\n\nfunction decodeImageFrame (imageFrame, transferSyntax, pixelData, decodeConfig, options) {\n  const start = new Date().getTime();\n\n  if (transferSyntax === '1.2.840.10008.1.2') {\n    // Implicit VR Little Endian\n    imageFrame = decodeLittleEndian(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.1') {\n    // Explicit VR Little Endian\n    imageFrame = decodeLittleEndian(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.2') {\n    // Explicit VR Big Endian (retired)\n    imageFrame = decodeBigEndian(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.1.99') {\n    // Deflate transfer syntax (deflated by dicomParser)\n    imageFrame = decodeLittleEndian(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.5') {\n    // RLE Lossless\n    imageFrame = decodeRLE(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.50') {\n    // JPEG Baseline lossy process 1 (8 bit)\n    imageFrame = decodeJPEGBaseline(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.51') {\n    // JPEG Baseline lossy process 2 & 4 (12 bit)\n    imageFrame = decodeJPEGBaseline(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.57') {\n    // JPEG Lossless, Nonhierarchical (Processes 14)\n    imageFrame = decodeJPEGLossless(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.70') {\n    // JPEG Lossless, Nonhierarchical (Processes 14 [Selection 1])\n    imageFrame = decodeJPEGLossless(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.80') {\n    // JPEG-LS Lossless Image Compression\n    imageFrame = decodeJPEGLS(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.81') {\n    // JPEG-LS Lossy (Near-Lossless) Image Compression\n    imageFrame = decodeJPEGLS(imageFrame, pixelData);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.90') {\n    // JPEG 2000 Lossless\n    imageFrame = decodeJPEG2000(imageFrame, pixelData, decodeConfig, options);\n  } else if (transferSyntax === '1.2.840.10008.1.2.4.91') {\n    // JPEG 2000 Lossy\n    imageFrame = decodeJPEG2000(imageFrame, pixelData, decodeConfig, options);\n  } else {\n    throw new Error(`no decoder for transfer syntax ${transferSyntax}`);\n  }\n\n  /* Don't know if these work...\n   // JPEG 2000 Part 2 Multicomponent Image Compression (Lossless Only)\n   else if(transferSyntax === \"1.2.840.10008.1.2.4.92\")\n   {\n   return decodeJPEG2000(dataSet, frame);\n   }\n   // JPEG 2000 Part 2 Multicomponent Image Compression\n   else if(transferSyntax === \"1.2.840.10008.1.2.4.93\")\n   {\n   return decodeJPEG2000(dataSet, frame);\n   }\n   */\n\n  const shouldShift = imageFrame.pixelRepresentation !== undefined && imageFrame.pixelRepresentation === 1;\n  const shift = (shouldShift && imageFrame.bitsStored !== undefined) ? (32 - imageFrame.bitsStored) : undefined;\n\n  if (shouldShift && shift !== undefined) {\n    for (let i = 0; i < imageFrame.pixelData.length; i++) {\n      // eslint-disable-next-line no-bitwise\n      imageFrame.pixelData[i] = (imageFrame.pixelData[i] << shift >> shift);\n    }\n  }\n\n  const end = new Date().getTime();\n\n  imageFrame.decodeTimeInMS = end - start;\n\n  return imageFrame;\n}\n\nexport default decodeImageFrame;\n","/* eslint no-bitwise: 0 */\nfunction swap16 (val) {\n  return ((val & 0xFF) << 8) |\n    ((val >> 8) & 0xFF);\n}\n\n\nfunction decodeBigEndian (imageFrame, pixelData) {\n  if (imageFrame.bitsAllocated === 16) {\n    let arrayBuffer = pixelData.buffer;\n    let offset = pixelData.byteOffset;\n    const length = pixelData.length;\n    // if pixel data is not aligned on even boundary, shift it so we can create the 16 bit array\n    // buffers on it\n\n    if (offset % 2) {\n      arrayBuffer = arrayBuffer.slice(offset);\n      offset = 0;\n    }\n\n    if (imageFrame.pixelRepresentation === 0) {\n      imageFrame.pixelData = new Uint16Array(arrayBuffer, offset, length / 2);\n    } else {\n      imageFrame.pixelData = new Int16Array(arrayBuffer, offset, length / 2);\n    }\n    // Do the byte swap\n    for (let i = 0; i < imageFrame.pixelData.length; i++) {\n      imageFrame.pixelData[i] = swap16(imageFrame.pixelData[i]);\n    }\n\n  } else if (imageFrame.bitsAllocated === 8) {\n    imageFrame.pixelData = pixelData;\n  }\n\n  return imageFrame;\n}\n\nexport default decodeBigEndian;\n","function decodeJpx (imageFrame, pixelData) {\n  const jpxImage = new JpxImage();\n\n  jpxImage.parse(pixelData);\n\n  const tileCount = jpxImage.tiles.length;\n\n  if (tileCount !== 1) {\n    throw new Error(`JPEG2000 decoder returned a tileCount of ${tileCount}, when 1 is expected`);\n  }\n\n  imageFrame.columns = jpxImage.width;\n  imageFrame.rows = jpxImage.height;\n  imageFrame.pixelData = jpxImage.tiles[0].items;\n\n  return imageFrame;\n}\n\nlet openJPEG;\n\nfunction decodeOpenJPEG (data, bytesPerPixel, signed) {\n  const dataPtr = openJPEG._malloc(data.length);\n\n  openJPEG.writeArrayToMemory(data, dataPtr);\n\n  // create param outpout\n  const imagePtrPtr = openJPEG._malloc(4);\n  const imageSizePtr = openJPEG._malloc(4);\n  const imageSizeXPtr = openJPEG._malloc(4);\n  const imageSizeYPtr = openJPEG._malloc(4);\n  const imageSizeCompPtr = openJPEG._malloc(4);\n\n  const t0 = new Date().getTime();\n  const ret = openJPEG.ccall('jp2_decode', 'number', ['number', 'number', 'number', 'number', 'number', 'number', 'number'],\n    [dataPtr, data.length, imagePtrPtr, imageSizePtr, imageSizeXPtr, imageSizeYPtr, imageSizeCompPtr]);\n  // add num vomp..etc\n\n  if (ret !== 0) {\n    console.log('[opj_decode] decoding failed!');\n    openJPEG._free(dataPtr);\n    openJPEG._free(openJPEG.getValue(imagePtrPtr, '*'));\n    openJPEG._free(imageSizeXPtr);\n    openJPEG._free(imageSizeYPtr);\n    openJPEG._free(imageSizePtr);\n    openJPEG._free(imageSizeCompPtr);\n\n    return;\n  }\n\n  const imagePtr = openJPEG.getValue(imagePtrPtr, '*');\n\n  const image = {\n    length: openJPEG.getValue(imageSizePtr, 'i32'),\n    sx: openJPEG.getValue(imageSizeXPtr, 'i32'),\n    sy: openJPEG.getValue(imageSizeYPtr, 'i32'),\n    nbChannels: openJPEG.getValue(imageSizeCompPtr, 'i32'), // hard coded for now\n    perf_timetodecode: undefined,\n    pixelData: undefined\n  };\n\n  // Copy the data from the EMSCRIPTEN heap into the correct type array\n  const length = image.sx * image.sy * image.nbChannels;\n  const src32 = new Int32Array(openJPEG.HEAP32.buffer, imagePtr, length);\n\n  if (bytesPerPixel === 1) {\n    if (Uint8Array.from) {\n      image.pixelData = Uint8Array.from(src32);\n    } else {\n      image.pixelData = new Uint8Array(length);\n      for (let i = 0; i < length; i++) {\n        image.pixelData[i] = src32[i];\n      }\n    }\n  } else if (signed) {\n    if (Int16Array.from) {\n      image.pixelData = Int16Array.from(src32);\n    } else {\n      image.pixelData = new Int16Array(length);\n      for (let i = 0; i < length; i++) {\n        image.pixelData[i] = src32[i];\n      }\n    }\n  } else if (Uint16Array.from) {\n    image.pixelData = Uint16Array.from(src32);\n  } else {\n    image.pixelData = new Uint16Array(length);\n    for (let i = 0; i < length; i++) {\n      image.pixelData[i] = src32[i];\n    }\n  }\n\n  const t1 = new Date().getTime();\n\n  image.perf_timetodecode = t1 - t0;\n\n  // free\n  openJPEG._free(dataPtr);\n  openJPEG._free(imagePtrPtr);\n  openJPEG._free(imagePtr);\n  openJPEG._free(imageSizePtr);\n  openJPEG._free(imageSizeXPtr);\n  openJPEG._free(imageSizeYPtr);\n  openJPEG._free(imageSizeCompPtr);\n\n  return image;\n}\n\nfunction decodeOpenJpeg2000 (imageFrame, pixelData) {\n  const bytesPerPixel = imageFrame.bitsAllocated <= 8 ? 1 : 2;\n  const signed = imageFrame.pixelRepresentation === 1;\n\n  const image = decodeOpenJPEG(pixelData, bytesPerPixel, signed);\n\n  imageFrame.columns = image.sx;\n  imageFrame.rows = image.sy;\n  imageFrame.pixelData = image.pixelData;\n  if (image.nbChannels > 1) {\n    imageFrame.photometricInterpretation = 'RGB';\n  }\n\n  return imageFrame;\n}\n\nfunction initializeJPEG2000 (decodeConfig) {\n  // check to make sure codec is loaded\n  if (!decodeConfig.usePDFJS) {\n    if (typeof OpenJPEG === 'undefined') {\n      throw new Error('OpenJPEG decoder not loaded');\n    }\n  }\n\n  if (!openJPEG) {\n    openJPEG = OpenJPEG();\n    if (!openJPEG || !openJPEG._jp2_decode) {\n      throw new Error('OpenJPEG failed to initialize');\n    }\n  }\n}\n\nfunction decodeJPEG2000 (imageFrame, pixelData, decodeConfig, options = {}) {\n  initializeJPEG2000(decodeConfig);\n\n  if (options.usePDFJS || decodeConfig.usePDFJS) {\n    // OHIF image-JPEG2000 https://github.com/OHIF/image-JPEG2000\n    // console.log('PDFJS')\n    return decodeJpx(imageFrame, pixelData);\n  }\n\n  // OpenJPEG2000 https://github.com/jpambrun/openjpeg\n  // console.log('OpenJPEG')\n  return decodeOpenJpeg2000(imageFrame, pixelData);\n}\n\nexport default decodeJPEG2000;\nexport { initializeJPEG2000 };\n","\n\nfunction decodeJPEGBaseline (imageFrame, pixelData) {\n  // check to make sure codec is loaded\n  if (typeof JpegImage === 'undefined') {\n    throw new Error('No JPEG Baseline decoder loaded');\n  }\n  const jpeg = new JpegImage();\n\n  jpeg.parse(pixelData);\n\n  // Do not use the internal jpeg.js color transformation,\n  // since we will handle this afterwards\n  jpeg.colorTransform = false;\n\n  if (imageFrame.bitsAllocated === 8) {\n    imageFrame.pixelData = jpeg.getData(imageFrame.columns, imageFrame.rows);\n\n    return imageFrame;\n  } else if (imageFrame.bitsAllocated === 16) {\n    imageFrame.pixelData = jpeg.getData16(imageFrame.columns, imageFrame.rows);\n\n    return imageFrame;\n  }\n}\n\nexport default decodeJPEGBaseline;\n","let charLS;\n\nfunction jpegLSDecode (data, isSigned) {\n  // prepare input parameters\n  const dataPtr = charLS._malloc(data.length);\n\n  charLS.writeArrayToMemory(data, dataPtr);\n\n  // prepare output parameters\n  const imagePtrPtr = charLS._malloc(4);\n  const imageSizePtr = charLS._malloc(4);\n  const widthPtr = charLS._malloc(4);\n  const heightPtr = charLS._malloc(4);\n  const bitsPerSamplePtr = charLS._malloc(4);\n  const stridePtr = charLS._malloc(4);\n  const allowedLossyErrorPtr = charLS._malloc(4);\n  const componentsPtr = charLS._malloc(4);\n  const interleaveModePtr = charLS._malloc(4);\n\n  // Decode the image\n  const result = charLS.ccall(\n    'jpegls_decode',\n    'number',\n    ['number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number', 'number'],\n    [dataPtr, data.length, imagePtrPtr, imageSizePtr, widthPtr, heightPtr, bitsPerSamplePtr, stridePtr, componentsPtr, allowedLossyErrorPtr, interleaveModePtr]\n  );\n\n  // Extract result values into object\n  const image = {\n    result,\n    width: charLS.getValue(widthPtr, 'i32'),\n    height: charLS.getValue(heightPtr, 'i32'),\n    bitsPerSample: charLS.getValue(bitsPerSamplePtr, 'i32'),\n    stride: charLS.getValue(stridePtr, 'i32'),\n    components: charLS.getValue(componentsPtr, 'i32'),\n    allowedLossyError: charLS.getValue(allowedLossyErrorPtr, 'i32'),\n    interleaveMode: charLS.getValue(interleaveModePtr, 'i32'),\n    pixelData: undefined\n  };\n\n  // Copy image from emscripten heap into appropriate array buffer type\n  const imagePtr = charLS.getValue(imagePtrPtr, '*');\n\n  if (image.bitsPerSample <= 8) {\n    image.pixelData = new Uint8Array(image.width * image.height * image.components);\n    image.pixelData.set(new Uint8Array(charLS.HEAP8.buffer, imagePtr, image.pixelData.length));\n  } else if (isSigned) {\n    image.pixelData = new Int16Array(image.width * image.height * image.components);\n    image.pixelData.set(new Int16Array(charLS.HEAP16.buffer, imagePtr, image.pixelData.length));\n  } else {\n    image.pixelData = new Uint16Array(image.width * image.height * image.components);\n    image.pixelData.set(new Uint16Array(charLS.HEAP16.buffer, imagePtr, image.pixelData.length));\n  }\n\n  // free memory and return image object\n  charLS._free(dataPtr);\n  charLS._free(imagePtr);\n  charLS._free(imagePtrPtr);\n  charLS._free(imageSizePtr);\n  charLS._free(widthPtr);\n  charLS._free(heightPtr);\n  charLS._free(bitsPerSamplePtr);\n  charLS._free(stridePtr);\n  charLS._free(componentsPtr);\n  charLS._free(interleaveModePtr);\n\n  return image;\n}\n\nfunction initializeJPEGLS () {\n  // check to make sure codec is loaded\n  if (typeof CharLS === 'undefined') {\n    throw new Error('No JPEG-LS decoder loaded');\n  }\n\n  // Try to initialize CharLS\n  // CharLS https://github.com/cornerstonejs/charls\n  if (!charLS) {\n    charLS = CharLS();\n    if (!charLS || !charLS._jpegls_decode) {\n      throw new Error('JPEG-LS failed to initialize');\n    }\n  }\n\n}\n\nfunction decodeJPEGLS (imageFrame, pixelData) {\n  initializeJPEGLS();\n\n  const image = jpegLSDecode(pixelData, imageFrame.pixelRepresentation === 1);\n\n  // throw error if not success or too much data\n  if (image.result !== 0 && image.result !== 6) {\n    throw new Error(`JPEG-LS decoder failed to decode frame (error code ${image.result})`);\n  }\n\n  imageFrame.columns = image.width;\n  imageFrame.rows = image.height;\n  imageFrame.pixelData = image.pixelData;\n\n  return imageFrame;\n}\n\nexport default decodeJPEGLS;\nexport { initializeJPEGLS };\n","\n\nfunction decodeJPEGLossless (imageFrame, pixelData) {\n  // check to make sure codec is loaded\n  if (typeof jpeg === 'undefined' ||\n    typeof jpeg.lossless === 'undefined' ||\n    typeof jpeg.lossless.Decoder === 'undefined') {\n    throw new Error('No JPEG Lossless decoder loaded');\n  }\n\n  const byteOutput = imageFrame.bitsAllocated <= 8 ? 1 : 2;\n  // console.time('jpeglossless');\n  const buffer = pixelData.buffer;\n  const decoder = new jpeg.lossless.Decoder();\n  const decompressedData = decoder.decode(buffer, pixelData.byteOffset, pixelData.length, byteOutput);\n  // console.timeEnd('jpeglossless');\n\n  if (imageFrame.pixelRepresentation === 0) {\n    if (imageFrame.bitsAllocated === 16) {\n      imageFrame.pixelData = new Uint16Array(decompressedData.buffer);\n\n      return imageFrame;\n    }\n    // untested!\n    imageFrame.pixelData = new Uint8Array(decompressedData.buffer);\n\n    return imageFrame;\n\n  }\n  imageFrame.pixelData = new Int16Array(decompressedData.buffer);\n\n  return imageFrame;\n\n}\n\nexport default decodeJPEGLossless;\n","function decodeLittleEndian (imageFrame, pixelData) {\n  let arrayBuffer = pixelData.buffer;\n  let offset = pixelData.byteOffset;\n  const length = pixelData.length;\n\n  if (imageFrame.bitsAllocated === 16) {\n    // if pixel data is not aligned on even boundary, shift it so we can create the 16 bit array\n    // buffers on it\n    if (offset % 2) {\n      arrayBuffer = arrayBuffer.slice(offset);\n      offset = 0;\n    }\n\n    if (imageFrame.pixelRepresentation === 0) {\n      imageFrame.pixelData = new Uint16Array(arrayBuffer, offset, length / 2);\n    } else {\n      imageFrame.pixelData = new Int16Array(arrayBuffer, offset, length / 2);\n    }\n  } else if (imageFrame.bitsAllocated === 8 || imageFrame.bitsAllocated === 1) {\n    imageFrame.pixelData = pixelData;\n  } else if (imageFrame.bitsAllocated === 32) {\n    // if pixel data is not aligned on even boundary, shift it\n    if (offset % 2) {\n      arrayBuffer = arrayBuffer.slice(offset);\n      offset = 0;\n    }\n\n    imageFrame.pixelData = new Float32Array(arrayBuffer, offset, length / 4);\n  }\n\n  return imageFrame;\n}\n\nexport default decodeLittleEndian;\n","function decodeRLE (imageFrame, pixelData) {\n  if (imageFrame.bitsAllocated === 8) {\n    if (imageFrame.planarConfiguration) {\n      return decode8Planar(imageFrame, pixelData);\n    }\n\n    return decode8(imageFrame, pixelData);\n  } else if (imageFrame.bitsAllocated === 16) {\n    return decode16(imageFrame, pixelData);\n  }\n\n  throw new Error('unsupported pixel format for RLE');\n}\n\nfunction decode8 (imageFrame, pixelData) {\n  const frameData = pixelData;\n  const frameSize = imageFrame.rows * imageFrame.columns;\n  const outFrame = new ArrayBuffer(frameSize * imageFrame.samplesPerPixel);\n  const header = new DataView(frameData.buffer, frameData.byteOffset);\n  const data = new Int8Array(frameData.buffer, frameData.byteOffset);\n  const out = new Int8Array(outFrame);\n\n  let outIndex = 0;\n  const numSegments = header.getInt32(0, true);\n\n  for (let s = 0; s < numSegments; ++s) {\n    outIndex = s;\n\n    let inIndex = header.getInt32((s + 1) * 4, true);\n    let maxIndex = header.getInt32((s + 2) * 4, true);\n\n    if (maxIndex === 0) {\n      maxIndex = frameData.length;\n    }\n\n    const endOfSegment = frameSize * numSegments;\n\n    while (inIndex < maxIndex) {\n      const n = data[inIndex++];\n\n      if (n >= 0 && n <= 127) {\n        // copy n bytes\n        for (let i = 0; i < n + 1 && outIndex < endOfSegment; ++i) {\n          out[outIndex] = data[inIndex++];\n          outIndex += imageFrame.samplesPerPixel;\n        }\n      } else if (n <= -1 && n >= -127) {\n        const value = data[inIndex++];\n        // run of n bytes\n\n        for (let j = 0; j < -n + 1 && outIndex < endOfSegment; ++j) {\n          out[outIndex] = value;\n          outIndex += imageFrame.samplesPerPixel;\n        }\n      }/* else if (n === -128) {\n\n      } // do nothing */\n    }\n  }\n  imageFrame.pixelData = new Uint8Array(outFrame);\n\n  return imageFrame;\n}\n\nfunction decode8Planar (imageFrame, pixelData) {\n  const frameData = pixelData;\n  const frameSize = imageFrame.rows * imageFrame.columns;\n  const outFrame = new ArrayBuffer(frameSize * imageFrame.samplesPerPixel);\n  const header = new DataView(frameData.buffer, frameData.byteOffset);\n  const data = new Int8Array(frameData.buffer, frameData.byteOffset);\n  const out = new Int8Array(outFrame);\n\n  let outIndex = 0;\n  const numSegments = header.getInt32(0, true);\n\n  for (let s = 0; s < numSegments; ++s) {\n    outIndex = s * frameSize;\n\n    let inIndex = header.getInt32((s + 1) * 4, true);\n    let maxIndex = header.getInt32((s + 2) * 4, true);\n\n    if (maxIndex === 0) {\n      maxIndex = frameData.length;\n    }\n\n    const endOfSegment = frameSize * numSegments;\n\n    while (inIndex < maxIndex) {\n      const n = data[inIndex++];\n\n      if (n >= 0 && n <= 127) {\n        // copy n bytes\n        for (let i = 0; i < n + 1 && outIndex < endOfSegment; ++i) {\n          out[outIndex] = data[inIndex++];\n          outIndex++;\n        }\n      } else if (n <= -1 && n >= -127) {\n        const value = data[inIndex++];\n        // run of n bytes\n\n        for (let j = 0; j < -n + 1 && outIndex < endOfSegment; ++j) {\n          out[outIndex] = value;\n          outIndex++;\n        }\n      }/* else if (n === -128) {\n\n      } // do nothing */\n    }\n  }\n  imageFrame.pixelData = new Uint8Array(outFrame);\n\n  return imageFrame;\n}\n\nfunction decode16 (imageFrame, pixelData) {\n  const frameData = pixelData;\n  const frameSize = imageFrame.rows * imageFrame.columns;\n  const outFrame = new ArrayBuffer(frameSize * imageFrame.samplesPerPixel * 2);\n\n  const header = new DataView(frameData.buffer, frameData.byteOffset);\n  const data = new Int8Array(frameData.buffer, frameData.byteOffset);\n  const out = new Int8Array(outFrame);\n\n  const numSegments = header.getInt32(0, true);\n\n  for (let s = 0; s < numSegments; ++s) {\n    let outIndex = 0;\n    const highByte = (s === 0 ? 1 : 0);\n\n    let inIndex = header.getInt32((s + 1) * 4, true);\n    let maxIndex = header.getInt32((s + 2) * 4, true);\n\n    if (maxIndex === 0) {\n      maxIndex = frameData.length;\n    }\n\n    while (inIndex < maxIndex) {\n      const n = data[inIndex++];\n\n      if (n >= 0 && n <= 127) {\n        for (let i = 0; i < n + 1 && outIndex < frameSize; ++i) {\n          out[(outIndex * 2) + highByte] = data[inIndex++];\n          outIndex++;\n        }\n      } else if (n <= -1 && n >= -127) {\n        const value = data[inIndex++];\n\n        for (let j = 0; j < -n + 1 && outIndex < frameSize; ++j) {\n          out[(outIndex * 2) + highByte] = value;\n          outIndex++;\n        }\n      }/* else if (n === -128) {\n\n      } // do nothing */\n    }\n  }\n  if (imageFrame.pixelRepresentation === 0) {\n    imageFrame.pixelData = new Uint16Array(outFrame);\n  } else {\n    imageFrame.pixelData = new Int16Array(outFrame);\n  }\n\n  return imageFrame;\n}\n\nexport default decodeRLE;\n","/**\n * Calculate the minimum and maximum values in an Array\n *\n * @param {Number[]} storedPixelData\n * @return {{min: Number, max: Number}}\n */\nfunction getMinMax (storedPixelData) {\n  // we always calculate the min max values since they are not always\n  // present in DICOM and we don't want to trust them anyway as cornerstone\n  // depends on us providing reliable values for these\n  let min = storedPixelData[0];\n  let max = storedPixelData[0];\n  let storedPixel;\n  const numPixels = storedPixelData.length;\n\n  for (let index = 1; index < numPixels; index++) {\n    storedPixel = storedPixelData[index];\n    min = Math.min(min, storedPixel);\n    max = Math.max(max, storedPixel);\n  }\n\n  return {\n    min,\n    max\n  };\n}\n\nexport default getMinMax;\n","export default '2.1.4';\n"],"sourceRoot":""}